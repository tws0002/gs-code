#! C:/Program Files/Nuke7.0v4/Nuke7.0.exe -nx
version 7.0 v4
Gizmo {
 inputs 2
 help "****Luma_Despill_v08\n\nAn advanced Despiller, with many options for despill algorithms. the option to change the color of the \npixels despilled, option to replace despilled pixels with a BG input.  The despiller also outputs \na difference matte to the alpha channel, which is perfect for soft keying and hair, or gray matte \nkeying techniques. "
 note_font "Bitstream Vera Sans"
 mapsize {0.15 0.15}
 addUserKnob {20 L_Despill}
 addUserKnob {4 ScreenColor l "Screen Color" t "what color is your screen?" M {Green Red Blue ""}}
 addUserKnob {20 Advanced_ScreenColor l Advanced n 1}
 Advanced_ScreenColor 0
 addUserKnob {4 DespillMath l "Despill Math" t "different algorythims yield differnt results.  Average works best for green screens.  BlueLimitsGreen works best for blue screens." -STARTLINE M {Average Average2 Max RedLimitsGreen BlueLimitsGreen ""}}
 addUserKnob {4 SpillMathColorspace l MathColorspace t "These algorythims can sometimes produce artifacts in linear so the default here is Log.  Depending upon your situation, linear may be better but it usually makes very little difference." -STARTLINE M {Log Lin ""}}
 addUserKnob {41 primary_out l ColorMatrix -STARTLINE T ColorMatrix.primary_out}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {7 BalanceWhite l "Balance White" t "Offsets the color temperature of the white point despill math and then the reverse after. " R -2 4}
 BalanceWhite 1
 addUserKnob {7 BalanceBlack l "Balance Black" t "Offsets the color temperature of the black point before the despill math and then the reverse after. " R -0.01 0.01}
 addUserKnob {7 HueRotation R -10 10}
 addUserKnob {7 FineTune l "Fine Tune" t "Inserts a variable into the keying equation.  " R -1 1}
 addUserKnob {26 ""}
 addUserKnob {41 add l "Spill Replace" t "Uses the spill matte generated by the despill math to offset pixel values. " T SpillReplaceGrade.add}
 addUserKnob {41 saturation T SpillReplaceSaturation.saturation}
 addUserKnob {20 Advanced_Spill_Replace l Advanced n 1}
 Advanced_Spill_Replace 0
 addUserKnob {41 blackpoint_2 l blackpoint T SpillReplaceGrade.blackpoint}
 addUserKnob {41 whitepoint_2 l whitepoint T SpillReplaceGrade.whitepoint}
 addUserKnob {41 black l lift T SpillReplaceGrade.black}
 addUserKnob {41 white l gain T SpillReplaceGrade.white}
 addUserKnob {41 multiply T SpillReplaceGrade.multiply}
 addUserKnob {41 gamma_2 l gamma T SpillReplaceGrade.gamma}
 addUserKnob {4 ReplaceColorColorspace l Colorspace M {Log Lin}}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {41 bbox l "set bbox to " T L_Despill_MergeBBox.bbox}
 addUserKnob {7 mix}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {22 Button l "     Luma Pictures     " T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.luma-pictures.com/tools/nuke/')" +STARTLINE}
 addUserKnob {20 SpillMatte}
 addUserKnob {6 IncludeInputSpillMatte l "Include Input Spill Matte" t "This allows for stacking of Despill_L nodes.  The spillmatte of each key is passed through to the next allowing you to adjust all spill corrected areas with the last node. " -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {7 SpillMatteWhitepoint l whitepoint t "adjusts the spillmatte whitepoint"}
 SpillMatteWhitepoint 1
 addUserKnob {7 SpillMatteBlackpoint l blackpoint t "adjusts the spillmatte blackpoint"}
 addUserKnob {7 SpillMatteGamma l gamma t "adjusts the spillmatte gamma" R 0 4}
 SpillMatteGamma 1
 addUserKnob {26 ""}
 addUserKnob {41 disable_1 l disable -STARTLINE T SpillMatteMedian.disable}
 addUserKnob {41 size_1 l "Median Size" t "adjusts the spillmatte median filter value" T SpillMatteMedian.size}
 addUserKnob {26 ""}
 addUserKnob {26 AlphaClean l "" t "Removes stray pixels from your matte but attempts to not effect the edge." +STARTLINE T "Spill Matte Clean   "}
 addUserKnob {6 SpillMatteAlphaClean_disable l disable -STARTLINE}
 SpillMatteAlphaClean_disable true
 addUserKnob {7 SpillMatteAlphaCleanPreGradeWhitepoint l center t "Adjust this so that the \"Oringinal Edge\" of your matte isn't effected. "}
 SpillMatteAlphaCleanPreGradeWhitepoint 0.3
 addUserKnob {41 size T SpillMatteAlphaClean.size}
 addUserKnob {41 OrigEdgeAmount T SpillMatteAlphaClean.OrigEdgeAmount}
 addUserKnob {41 OrigEdgeWidth T SpillMatteAlphaClean.OrigEdgeWidth}
 addUserKnob {26 ""}
 addUserKnob {14 SpillMatteBlur l "Spill Matte Blur" R 0 100}
 addUserKnob {26 ""}
 addUserKnob {4 SpillMatteMathColorspace l "Math Colorspace" -STARTLINE M {Log Lin "Defined by Luminance from BG" "" "" ""}}
 addUserKnob {20 Background}
 addUserKnob {41 blackpoint T L_Despill_BG_Grade.blackpoint}
 addUserKnob {41 whitepoint T L_Despill_BG_Grade.whitepoint}
 addUserKnob {41 gamma T L_Despill_BG_Grade.gamma}
 addUserKnob {41 saturation_1 l saturation T L_Despill_BG_Saturation.saturation}
 addUserKnob {41 black_clamp l "black clamp" T L_Despill_BG_Grade.black_clamp}
 addUserKnob {41 white_clamp l "white clamp" -STARTLINE T L_Despill_BG_Grade.white_clamp}
 addUserKnob {4 MultPlusColorspace l ColorSpace -STARTLINE M {Log Lin "" "" "" "" ""}}
 MultPlusColorspace Lin
 addUserKnob {20 FGgrade}
 addUserKnob {41 blackpoint_1 l blackpoint T L_Despill_FGGrade.blackpoint}
 addUserKnob {41 whitepoint_1 l whitepoint T L_Despill_FGGrade.whitepoint}
 addUserKnob {41 black_1 l lift T L_Despill_FGGrade.black}
 addUserKnob {41 white_1 l gain T L_Despill_FGGrade.white}
 addUserKnob {41 multiply_1 l multiply T L_Despill_FGGrade.multiply}
 addUserKnob {41 add_1 l offset T L_Despill_FGGrade.add}
 addUserKnob {41 gamma_1 l gamma T L_Despill_FGGrade.gamma}
 addUserKnob {41 saturation_2 l saturation T L_Despill_FGSaturation.saturation}
}
 Expression {
  inputs 0
  expr1 g>r*(parent.FineTune+1)?r*(parent.FineTune+1):g
  expr3 g-r*(parent.FineTune+1)
  name DespilledGreenRedLimitsGreen3
  xpos -210
  ypos -655
  disable true
 }
 Input {
  inputs 0
  name FG
  xpos 168
  ypos -902
 }
 Dot {
  name Dot6
  xpos 202
  ypos -829
 }
set N87469c0 [stack 0]
 Dot {
  name Dot2
  xpos 985
  ypos -618
 }
 Dot {
  name Dot30
  xpos 984
  ypos -28
 }
set N87470a0 [stack 0]
 Dot {
  name Dot5
  xpos 984
  ypos 817
 }
set N8747410 [stack 0]
 Dot {
  name Dot27
  xpos 984
  ypos 961
 }
 Input {
  inputs 0
  name BG
  xpos 621
  ypos -903
  number 1
 }
 Dot {
  name Dot16
  xpos 655
  ypos -445
 }
set N8747e60 [stack 0]
 Dot {
  name Dot7
  xpos 656
  ypos 49
 }
set N87481d0 [stack 0]
 Dot {
  name Dot13
  xpos 766
  ypos 49
 }
 Dot {
  name Dot3
  xpos 764
  ypos 558
 }
set N87488b0 [stack 0]
 Dot {
  name Dot12
  xpos 819
  ypos 558
 }
 Merge2 {
  inputs 2
  name L_Despill_MergeBBox
  xpos 785
  ypos 956
 }
push $N87470a0
push $N87469c0
 NoOp {
  name LumaDespillFGPixelAspect
  xpos 168
  ypos -782
 }
 Colorspace {
  name ColorMatrix
  xpos 168
  ypos -741
 }
 HueShift {
  hue_rotation {{parent.HueRotation i}}
  name HueShift1
  xpos 168
  ypos -698
 }
 Expression {
  expr0 "ScreenColor==1? g : r"
  channel1 {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  expr1 "ScreenColor==1 ? r : ScreenColor==0?g:b"
  expr2 "ScreenColor==2? g : b"
  expr3 .5
  name Swaparoonie
  xpos 168
  ypos -657
 }
set N10114d60 [stack 0]
 Dot {
  name Dot31
  xpos 316
  ypos -652
 }
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle1
  xpos 288
  ypos -430
 }
 Grade {
  channels rgba
  blackpoint 0.032
  whitepoint 0.73
  name Grade1
  xpos 288
  ypos -394
  disable true
 }
 Dot {
  name Dot11
  xpos 322
  ypos -56
 }
push $N8747e60
 Saturation {
  saturation 0
  name L_Despill_Monochrome
  xpos 510
  ypos -450
 }
 Shuffle {
  green red
  blue red
  alpha red
  name L_Despill_ShuffleLuma
  xpos 510
  ypos -422
 }
 Clamp {
  channels rgba
  name L_Despill_ClampLuma
  xpos 510
  ypos -393
 }
 Dot {
  name Dot1
  xpos 544
  ypos -267
 }
push $N10114d60
 Grade {
  channels {-rgba.red rgba.green -rgba.blue}
  blackpoint {{parent.BalanceBlack i}}
  whitepoint {{parent.BalanceWhite i}}
  black_clamp false
  name BalanceGrade
  xpos 168
  ypos -615
 }
 Dot {
  name Dot9
  xpos -401
  ypos -554
 }
set N10116fc0 [stack 0]
 Dot {
  name Dot21
  xpos -35
  ypos -496
 }
set N10117330 [stack 0]
 Expression {
  temp_name0 incrFT
  temp_expr0 "parent.FineTune + 1"
  temp_name1 gCond
  temp_expr1 "b * incrFT"
  expr1 "g > gCond ? gCond : g"
  expr3 "g - gCond"
  name DespilledGreenBlueLimitsGreen1
  xpos 150
  ypos -432
 }
push $N10117330
 Expression {
  temp_name0 incrFT
  temp_expr0 "parent.FineTune + 1"
  temp_name1 gCond
  temp_expr1 "r * incrFT"
  expr1 "g > gCond ? gCond : g"
  expr3 "g - gCond"
  name DespilledGreenRedLimitsGreen1
  xpos 41
  ypos -432
 }
push $N10117330
 Expression {
  temp_name0 var1
  temp_expr0 "max((r * ((1 - (parent.FineTune + .5)) * 2)), (b * (parent.FineTune + .5) * 2))"
  temp_name1 var2
  temp_expr1 "max((r * (parent.FineTune + .5) * 2),  (b * (1 - (parent.FineTune + .5)) * 2))"
  temp_name2 switch
  temp_expr2 "ScreenColor == 2 ? var1 : var2"
  temp_name3 spMatte
  temp_expr3 "clamp(g - switch, 0, 1)"
  channel0 {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  expr0 r
  channel1 {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  expr1 "g - spMatte"
  channel2 {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  expr2 b
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 spMatte
  name DespilledGreenMax1
  xpos -69
  ypos -432
 }
push $N10117330
 Expression {
  temp_name0 incrFT
  temp_expr0 "parent.FineTune + 1"
  temp_name1 gCond
  temp_expr1 "(b + r) / 2 * (incrFT)"
  expr1 "g > gCond ? gCond : g"
  expr3 "g - (r + b) * (incrFT) / 2"
  name DespilledGreenAverage3
  xpos -179
  ypos -432
 }
push $N10117330
 Expression {
  temp_name0 var1
  temp_expr0 "((r * ((1 - (parent.FineTune + .5)) * 2)) + (b * (parent.FineTune + .5) * 2)) / 2"
  temp_name1 var2
  temp_expr1 "((r * (parent.FineTune + .5) * 2) + (b * (1 - (parent.FineTune + .5)) * 2) ) / 2"
  temp_name2 switch
  temp_expr2 "ScreenColor == 2 ? var1 : var2"
  temp_name3 spMatte
  temp_expr3 "clamp(g - switch, 0, 1)"
  channel0 {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  expr0 r
  channel1 {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  expr1 "g - spMatte"
  channel2 {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  expr2 b
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 spMatte
  name DespilledGreenAverage1
  xpos -289
  ypos -432
 }
 Switch {
  inputs 5
  which {{parent.DespillMath i}}
  name DespillMathSwitch3
  xpos -69
  ypos -357
 }
set Nf86b870 [stack 0]
 Dot {
  name Dot4
  xpos 71
  ypos -352
 }
push $N10116fc0
 Log2Lin {
  operation lin2log
  black 0
  name Spill_Lin2Log
  xpos -748
  ypos -500
 }
set N101f6d60 [stack 0]
 Expression {
  temp_name0 incrFT
  temp_expr0 "parent.FineTune + 1"
  temp_name1 gCond
  temp_expr1 "b * incrFT"
  expr1 "g > gCond ? gCond : g"
  expr3 "g - gCond"
  name DespilledGreenBlueLimitsGreen
  xpos -528
  ypos -432
 }
push $N101f6d60
 Expression {
  temp_name0 incrFT
  temp_expr0 "parent.FineTune + 1"
  temp_name1 gCond
  temp_expr1 "r * incrFT"
  expr1 "g > gCond ? gCond : g"
  expr3 "g - gCond"
  name DespilledGreenRedLimitsGreen
  xpos -638
  ypos -432
 }
push $N101f6d60
 Expression {
  temp_name0 var1
  temp_expr0 "max((r * ((1 - (parent.FineTune + .5)) * 2)), (b * (parent.FineTune + .5) * 2))"
  temp_name1 var2
  temp_expr1 "max((r * (parent.FineTune + .5) * 2),  (b * (1 - (parent.FineTune + .5)) * 2))"
  temp_name2 switch
  temp_expr2 "ScreenColor == 2 ? var1 : var2"
  temp_name3 spMatte
  temp_expr3 "clamp(g - switch, 0, 1)"
  channel0 {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  expr0 r
  channel1 {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  expr1 "g - spMatte"
  channel2 {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  expr2 b
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 spMatte
  name DespilledGreenMax
  xpos -748
  ypos -433
 }
push $N101f6d60
 Expression {
  temp_name0 incrFT
  temp_expr0 "parent.FineTune + 1"
  temp_name1 gCond
  temp_expr1 "(b + r) / 2 * (incrFT)"
  expr1 "g > gCond ? gCond : g"
  expr3 "g - (r + b) * (incrFT) / 2"
  name DespilledGreenAverage2
  xpos -858
  ypos -432
 }
push $N101f6d60
 Expression {
  temp_name0 var1
  temp_expr0 "((r * ((1 - (parent.FineTune + .5)) * 2)) + (b * (parent.FineTune + .5) * 2)) / 2"
  temp_name1 var2
  temp_expr1 "((r * (parent.FineTune + .5) * 2) + (b * (1 - (parent.FineTune + .5)) * 2) ) / 2"
  temp_name2 switch
  temp_expr2 "ScreenColor == 2 ? var1 : var2"
  temp_name3 spMatte
  temp_expr3 "clamp(g - switch, 0, 1)"
  channel0 {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  expr0 r
  channel1 {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  expr1 "g - spMatte"
  channel2 {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  expr2 b
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 spMatte
  name DespilledGreenAverage
  xpos -967
  ypos -432
 }
 Switch {
  inputs 5
  which {{parent.DespillMath i}}
  name DespillMathSwitch
  xpos -748
  ypos -362
 }
 Dot {
  name Dot25
  xpos -394
  ypos -267
 }
set N101f8200 [stack 0]
 Keymix {
  inputs 3
  channels rgba
  name L_Despill_Keymix1
  xpos 37
  ypos -272
 }
 Dot {
  name Dot8
  xpos 71
  ypos -157
 }
push $Nf86b870
push $N101f8200
 Switch {
  inputs 3
  which {{SpillMatteMathColorspace i}}
  name L_Despill_Switch1
  xpos -69
  ypos -108
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  xpos -69
  ypos -61
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge1
  xpos -69
  ypos -33
  disable {{abs(IncludeInputSpillMatte-1) i}}
 }
 Grade {
  channels rgba
  blackpoint {{parent.SpillMatteBlackpoint i}}
  whitepoint {{parent.SpillMatteWhitepoint i}}
  gamma {{parent.SpillMatteGamma i}}
  name SpillMatteGrade
  xpos -69
  ypos -5
 }
add_layer {alpha alpha.red alpha.green alpha.blue alpha.Gmatte alpha.G_matte rga.alpha}
 Median {
  channels alpha
  name SpillMatteMedian
  xpos -69
  ypos 23
  disable true
 }
 Grade {
  channels rgba
  whitepoint {{parent.SpillMatteAlphaCleanPreGradeWhitepoint i}}
  name SpillMatteAlphaCleanPreGrade
  xpos -69
  ypos 65
 }
 Group {
  name SpillMatteAlphaClean
  help "The alphaClean removes stray pixels from the alpha channel of your matte.\nThe effect is applied to the alpha channel only."
  xpos -69
  ypos 93
  disable {{parent.SpillMatteAlphaClean_disable x1 1}}
  addUserKnob {20 AlphaClean}
  addUserKnob {7 size R 0 10}
  size 5
  addUserKnob {7 OrigEdgeAmount}
  OrigEdgeAmount 1
  addUserKnob {7 OrigEdgeWidth R 0 10}
  OrigEdgeWidth 5
  addUserKnob {6 ClampAlpha l "Clamp Alpha" +STARTLINE}
  ClampAlpha true
 }
  Input {
   inputs 0
   name Input1
   xpos 398
   ypos -721
  }
set N10320310 [stack 0]
  Clamp {
   channels alpha
   mix {{parent.ClampAlpha i x1001 0}}
   name clampAlpha1
   xpos 398
   ypos -620
  }
set N10320680 [stack 0]
  Dot {
   name Dot3
   xpos 508
   ypos -608
  }
  Dot {
   name Dot4
   xpos 508
   ypos 45
  }
set N10320d60 [stack 0]
  Blur {
   channels rgba
   size {{parent.size i}}
   name Blur1
   label "\[value size]"
   xpos 374
   ypos 33
  }
push $N10320680
  Dot {
   name Dot1
   xpos 52
   ypos -608
  }
set N10321440 [stack 0]
  Invert {
   channels rgba
   name Invert1
   xpos 233
   ypos -553
   disable {{"parent.size>=0 ? 1 : 0" i}}
  }
set N103217b0 [stack 0]
  Blur {
   channels rgba
   size {{parent.size i} {parent.size i}}
   name Blur7
   label "\[value size]"
   xpos 43
   ypos -440
  }
push $N103217b0
  Blur {
   channels rgba
   size {{parent.size*2 i} {parent.size*2 i}}
   name Blur8
   label "\[value size]"
   xpos 134
   ypos -440
  }
  Merge2 {
   inputs 2
   name Merge2
   xpos 134
   ypos -371
  }
push $N103217b0
  Blur {
   channels rgba
   size {{parent.size*4 i} {parent.size*4 i}}
   name Blur9
   label "\[value size]"
   xpos 233
   ypos -440
  }
  Merge2 {
   inputs 2
   name Merge3
   xpos 233
   ypos -324
  }
push $N103217b0
  Blur {
   channels rgba
   size {{parent.size*8 i} {parent.size*8 i}}
   name Blur10
   label "\[value size]"
   xpos 333
   ypos -440
  }
  Merge2 {
   inputs 2
   name Merge4
   xpos 333
   ypos -275
  }
  Invert {
   channels rgba
   name Invert2
   xpos 333
   ypos -247
   disable {{"parent.size>=0 ? 1 : 0" i}}
  }
  NoOp {
   name NoOp4
   tile_color 0xffd600ff
   label "positiv Expoblur"
   xpos 333
   ypos -137
  }
push $N10321440
  Invert {
   channels rgba
   name Invert4
   xpos -190
   ypos -553
   disable {{"parent.size<=0 ? 1 : 0" i}}
  }
set N10323a10 [stack 0]
  Blur {
   channels rgba
   size {{-parent.size i} {-parent.size i}}
   name Blur3
   label "\[value size]"
   xpos -368
   ypos -440
  }
push $N10323a10
  Blur {
   channels rgba
   size {{-parent.size*2 i} {-parent.size*2 i}}
   name Blur4
   label "\[value size]"
   xpos -265
   ypos -440
  }
  Merge2 {
   inputs 2
   name Merge7
   xpos -265
   ypos -364
  }
push $N10323a10
  Blur {
   channels rgba
   size {{-parent.size*4 i} {-parent.size*4 i}}
   name Blur5
   label "\[value size]"
   xpos -173
   ypos -440
  }
  Merge2 {
   inputs 2
   name Merge8
   xpos -173
   ypos -314
  }
push $N10323a10
  Blur {
   channels rgba
   size {{-parent.size*8 i} {-parent.size*8 i}}
   name Blur6
   label "\[value size]"
   xpos -85
   ypos -440
  }
  Merge2 {
   inputs 2
   name Merge9
   xpos -85
   ypos -270
  }
  Invert {
   channels rgba
   name Invert5
   xpos -85
   ypos -242
   disable {{"parent.size<=0 ? 1 : 0" i}}
  }
  NoOp {
   name NoOp2
   tile_color 0xffd600ff
   label "negativ Expoblur"
   xpos -85
   ypos -137
  }
  Keymix {
   inputs 3
   channels rgba
   name Keymix1
   xpos -85
   ypos 40
  }
set N103d0450 [stack 0]
  Dot {
   name Dot6
   xpos -207
   ypos 45
  }
  Blur {
   channels rgba
   size {{parent.OrigEdgeWidth i}}
   name Blur2
   label "\[value size]"
   xpos -241
   ypos 207
  }
set N103d0b30 [stack 0]
push $N103d0b30
  Merge2 {
   inputs 2
   operation xor
   name Merge1
   xpos -241
   ypos 257
  }
  Grade {
   channels rgba
   whitepoint 0.3
   name Grade1
   xpos -241
   ypos 293
  }
push $N10320d60
  Dot {
   name Dot5
   xpos 508
   ypos 298
  }
push $N103d0450
  Keymix {
   inputs 3
   channels rgba
   mix {{parent.OrigEdgeAmount i}}
   name Keymix2
   xpos -85
   ypos 293
  }
  Clamp {
   channels alpha
   mix {{parent.ClampAlpha i}}
   name clampAlpha
   xpos -85
   ypos 438
  }
push $N10320310
  Dot {
   name Dot2
   xpos 695
   ypos -544
  }
  ShuffleCopy {
   inputs 2
   name ChannelsPassThrough
   xpos 661
   ypos 445
  }
  Output {
   name Output1
   xpos 661
   ypos 518
  }
 end_group
 Grade {
  channels rgba
  whitepoint {{parent.SpillMatteAlphaCleanPreGradeWhitepoint i}}
  reverse true
  name SpillMatteAlphaCleanPreGradeReverse
  xpos -69
  ypos 121
 }
 Blur {
  channels rgba
  size {{SpillMatteBlur i}}
  name SpillMatteBlur
  label "\[value size]"
  xpos -69
  ypos 149
 }
 Clamp {
  name ClampSpillMatte
  xpos -69
  ypos 191
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name ShuffleSpillMatte
  xpos -69
  ypos 233
 }
set N104c0e70 [stack 0]
 Dot {
  name Dot18
  xpos 133
  ypos 238
 }
set N104c11e0 [stack 0]
 Dot {
  name Dot19
  xpos 133
  ypos 568
 }
push $N104c11e0
push $N87481d0
 Log2Lin {
  operation lin2log
  black 0
  name L_Despill_BG_Lin2Log
  xpos 622
  ypos 132
  disable {{parent.MultPlusColorspace i}}
 }
 Grade {
  blackpoint 0.05
  whitepoint 0.4
  black_clamp false
  name L_Despill_BG_Grade
  xpos 622
  ypos 160
 }
 Saturation {
  name L_Despill_BG_Saturation
  xpos 622
  ypos 188
 }
 Merge2 {
  inputs 2
  operation multiply
  name MultipylMultPlus
  xpos 622
  ypos 233
 }
 Dot {
  name Dot10
  xpos 656
  ypos 512
 }
push $N104c0e70
 Invert {
  channels rgba
  name InvertFGmatte
  xpos -69
  ypos 347
 }
set N104c29f0 [stack 0]
push $N104c29f0
push $N104c0e70
push $N104c0e70
push $Nf86b870
push $N101f8200
 Switch {
  inputs 2
  which {{parent.SpillMathColorspace i}}
  name L_Despill_Switch3
  xpos -428
  ypos -108
 }
 Log2Lin {
  black 0
  name Spill_Log2Lin
  xpos -428
  ypos -44
  disable {{parent.SpillMathColorspace i}}
 }
 Grade {
  channels {-rgba.red rgba.green -rgba.blue}
  blackpoint {{parent.BalanceGrade.blackpoint i}}
  whitepoint {{parent.BalanceGrade.whitepoint i}}
  add {{parent.BalanceGrade.add i}}
  reverse true
  black_clamp false
  name L_Despill_BalanceBack
  xpos -428
  ypos -16
 }
 Expression {
  expr0 "ScreenColor==1? g : r"
  channel1 {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  expr1 "ScreenColor==1 ? r : ScreenColor==0?g:b"
  expr2 "ScreenColor==2? g : b"
  expr3 a
  name Swaparoonie_Back
  xpos -428
  ypos 26
 }
 HueShift {
  hue_rotation {{-HueShift1.hue_rotation i}}
  name HueShift2
  xpos -428
  ypos 54
 }
 Colorspace {
  primary_in {{ColorMatrix.primary_out i}}
  name ReverseColorMatrix
  xpos -428
  ypos 82
 }
 Log2Lin {
  operation lin2log
  black 0
  name SpillReplace_Lin2Log1
  xpos -428
  ypos 110
  disable {{parent.ReplaceColorColorspace i}}
 }
 Grade {
  inputs 1+1
  channels rgba
  black_clamp false
  name SpillReplaceGrade
  xpos -428
  ypos 235
 }
 Saturation {
  inputs 1+1
  name SpillReplaceSaturation
  xpos -428
  ypos 263
 }
 Log2Lin {
  black 0
  name SpillReplace_Lin2Log2
  xpos -428
  ypos 291
  disable {{parent.ReplaceColorColorspace i}}
 }
push $N104c0e70
 ShuffleCopy {
  inputs 2
  red red
  green green
  blue blue
  alpha alpha2
  name Shuffle_Spillmatte_to_Alpha
  xpos -428
  ypos 319
 }
 Grade {
  inputs 1+1
  black_clamp false
  name L_Despill_FGGrade
  xpos -428
  ypos 347
 }
 Saturation {
  inputs 1+1
  name L_Despill_FGSaturation
  xpos -428
  ypos 375
 }
 Dot {
  name Dot14
  xpos -394
  ypos 445
 }
 Log2Lin {
  operation lin2log
  black 0
  name FGMultPlus_Lin2Log
  xpos -428
  ypos 479
  disable {{parent.MultPlusColorspace i}}
 }
 Merge2 {
  inputs 2
  operation plus
  name PlusMultPlus
  xpos -428
  ypos 507
 }
 Log2Lin {
  black 0
  name FGMultPlus_Log2Lin
  xpos -428
  ypos 535
  disable {{parent.MultPlusColorspace i}}
 }
 ShuffleCopy {
  inputs 2
  name L_Despill_ShuffleCopy1
  xpos 99
  ypos 669
 }
push $N8747410
 Dissolve {
  inputs 2
  channels rgba
  which {{parent.mix i}}
  name L_Despill_Dissolve1
  xpos 99
  ypos 812
 }
push $N87488b0
 Reformat {
  type "to box"
  box_width {{parent.LumaDespillFGPixelAspect.width i}}
  box_height {{parent.LumaDespillFGPixelAspect.height i}}
  box_fixed true
  box_pixel_aspect {{parent.LumaDespillFGPixelAspect.pixel_aspect i}}
  name L_Despill_Reformat1
  xpos 730
  ypos 896
 }
 ShuffleCopy {
  inputs 2
  red red
  green green
  blue blue
  name ChannelsPassThrough
  xpos 99
  ypos 896
 }
 CopyBBox {
  inputs 2
  name CopyBBoxBack
  xpos 99
  ypos 956
 }
 Output {
  name Output1
  xpos 99
  ypos 1076
 }
 Expression {
  inputs 0
  expr1 g>b*(parent.FineTune+1)?b*(parent.FineTune+1):g
  expr3 g-b*(parent.FineTune+1)
  name DespilledGreenBlueLimitsGreen3
  xpos -100
  ypos -655
  disable true
 }
 Expression {
  inputs 0
  temp_name3 spMatte
  temp_expr3 "clamp(g-(ScreenColor==2 ? ((r * ((1- (parent.FineTune+.5)) * 2))  +  (b * (parent.FineTune+.5) *2) )/2 : ((r * (parent.FineTune+.5) * 2)  +  (b *(1- (parent.FineTune+.5)) *2) )/2),0,1)"
  channel0 {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  expr0 r
  channel1 {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  expr1 "g - spMatte"
  channel2 {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  expr2 b
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 spMatte
  name DespilledGreenAverage5
  xpos -538
  ypos -655
  disable true
 }
 Expression {
  inputs 0
  expr1 g>(b+r)/2*(parent.FineTune+1)?(b+r)/2*(parent.FineTune+1):g
  expr3 g-(r+b)*(parent.FineTune+1)/2
  name DespilledGreenAverage4
  xpos -430
  ypos -655
  disable true
 }
 Expression {
  inputs 0
  temp_name3 spMatte
  temp_expr3 "clamp(g-(ScreenColor==2 ? max((r * ((1- (parent.FineTune+.5)) * 2)),(b * (parent.FineTune+.5) *2)) : max((r * (parent.FineTune+.5) * 2)  ,  (b *(1- (parent.FineTune+.5)) *2) )),0,1)"
  channel0 {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  expr0 r
  channel1 {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  expr1 "g - spMatte"
  channel2 {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  expr2 b
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 spMatte
  name DespilledGreenMax3
  xpos -320
  ypos -656
  disable true
 }
end_group
