/* MasksToLayers.jsx version: 3.0 author: Charles Bordenave (www.nabscripts.com) date: 31 Dec 2012*/function MasksToLayers(){	var masksToLayers = this;		var utils = new MasksToLayersUtils();	// infos	this.scriptName = "MasksToLayers.jsx";		this.scriptVersion = "3.0";	this.scriptTitle = "Masks To Layers";	this.scriptCopyright = "Copyright (c) 2012 Charles Bordenave";	this.scriptHomepage = "http://www.nabscripts.com";	this.scriptDescription = {en: "This script places the masks of the selected layer on individual layers.\\r\\rFor each new layer, you can specify the blending mode, and you can choose to move the anchor point to the center of the mask.", fr:"Ce script place chaque masque du calque sélectionné sur un calque séparé.\\r\\rPour chaque nouveau calque, il est possible de préciser un mode de fusion, et de choisir de déplacer le point d\\'ancrage au centre du masque."};	this.scriptAbout = {en:this.scriptName + ", v" + this.scriptVersion + "\\r" + this.scriptCopyright + "\\r" + this.scriptHomepage + "\\r\\r" + utils.loc(this.scriptDescription), 						fr:this.scriptName + ", v" + this.scriptVersion + "\\r" + this.scriptCopyright + "\\r" + this.scriptHomepage + "\\r\\r" + utils.loc(this.scriptDescription)};			this.scriptUsage = {en:	"\u25BA Select a layer having at least two masks \\r" +							"\u25BA Specify the blending mode of the new layers and whether you want to move the layer\\\'s anchor point to the center of the mask \\r" +							"\u25BA Click on Proceed",						fr:	"\u25BA Sélectionnez un calque contenant au moins deux masques \\r" +							"\u25BA Spécifiez le mode de fusion des nouveaux calques et si le point d\\\'ancrage doit être déplacé au centre du masque \\r" +							"\u25BA Cliquez sur Exécuter"};								// errors	this.noCompErr = {en:"A comp must be active.", fr:"Une composition doit être active."};	this.noLayersErr = {en:"Select a layer first.", fr:"Sélectionnez d'abord un calque."};	// UI strings 	this.aboutBtnName = "?";	this.optionsPnlName = {en:"Options", fr:"Options"};	this.blendingModeStName = {en:"Blending Mode:", fr:"Mode de fusion:"};	this.blendingModeLstChoices = {en:"['Normal','Add','Alpha Add']", fr:"['Normal','Ajout','Ajout Alpha']"};	this.anchorPointStName = {en:"Anchor Point:", fr:"Point d\\'ancrage:"};	this.anchorPointLstChoices = {en:"['Do not change','Move To Mask Center']", fr:"['Ne pas changer','Déplacer au centre du masque']"};	this.runBtnName = {en:"Proceed", fr:"Exécuter"};			this.buildUI = function (thisObj)	{		// dockable panel or palette		var pal = (thisObj instanceof Panel) ? thisObj : new Window("palette", this.scriptTitle, undefined, {resizeable:false});		// resource specifications		var res =		"group { orientation:'column', alignment:['left','top'], alignChildren:['right','top'], \			gr1: Group { \				aboutBtn: Button { text:'" + this.aboutBtnName + "', preferredSize:[25,20] } \			}, \			gr2: Panel { orientation:'column', alignment:['fill','fill'], alignChildren:['right','top'], text:'" + utils.loc(this.optionsPnlName) + "', \				gr21: Group { orientation:'row', \					blendingModeSt: StaticText { text:'" + utils.loc(this.blendingModeStName) + "', value:true }, \					blendingModeLst: DropDownList { properties:{items:" + utils.loc(this.blendingModeLstChoices) + "}, preferredSize:[150,20] } \				}, \				gr22: Group { orientation:'row', \					anchorPointSt: StaticText { text:'" + utils.loc(this.anchorPointStName) + "', value:true }, \					anchorPointLst: DropDownList { properties:{items:" + utils.loc(this.anchorPointLstChoices) + "}, preferredSize:[150,20] } \				} \			}, \			gr3: Group { orientation:'row', alignment:['fill','top'], \				runBtn: Button { text:'" + utils.loc(this.runBtnName) + "', alignment:['right','center'] } \			} \		}"; 		pal.gr = pal.add(res);				pal.gr.gr2.gr21.blendingModeLst.selection = 0;		pal.gr.gr2.gr22.anchorPointLst.selection = 0;				// event callbacks		pal.gr.gr1.aboutBtn.onClick = function () 		{ 			utils.createAboutDlg(masksToLayers.scriptAbout, masksToLayers.scriptUsage); 		};				pal.gr.gr3.runBtn.onClick = function () 		{ 			masksToLayers.distributeMasks(pal); 		};								// show user interface		if (pal instanceof Window)		{			pal.center();			pal.show();		}		else		{			pal.layout.layout(true);		}	   	};	// Determines whether the active item is a composition  	this.checkActiveItem = function () 	{		return !(app.project.activeItem instanceof CompItem);	};   		// Removes all masks except one	this.removeLayerMasksExceptOne = function (layer, idToKeep)	{		for (var id = layer.Masks.numProperties; id > 0; id--)		{			if (id != idToKeep)			{				layer.Masks.property(id).remove();			}		}	};	// Repositions the anchor point around the center of the first mask	this.moveAnchorPointToMaskCenter = function (layer)	{		var curTime = layer.containingComp.time;		var shape = layer.Masks.property(1).maskShape.valueAtTime(curTime, false);		var verts = shape.vertices;				// Compute centroid		var centroid = utils.getCenterOfMass(verts);		var x = centroid[0];		var y = centroid[1];		var z = 0;				// Reposition anchor point and adjust position		var anchPt = layer.anchorPoint;		var pos = layer.position;		var offset = [x,y,z] - anchPt.valueAtTime(curTime, false);		var newAnchPt = [x,y,z];		var newPos = pos.valueAtTime(curTime, false) + offset;								anchPt.numKeys ? anchPt.setValueAtTime(curTime, newAnchPt) : anchPt.setValue(newAnchPt);		pos.numKeys ? pos.setValueAtTime(curTime, newPos) : pos.setValue(newPos);	};			// Functional part of the script: places each mask of the selected layer on its own layer	this.distributeMasks = function (pal)	{		try		{			var comp = app.project.activeItem;			var err = this.noCompErr;			if (this.checkActiveItem(comp)) throw(err);								var err = this.noLayersErr;			if (comp.selectedLayers.length < 1) throw(err);						var layer = comp.selectedLayers[0];						var blendingModeOption = pal.gr.gr2.gr21.blendingModeLst.selection.index;			var anchorPointOption = pal.gr.gr2.gr22.anchorPointLst.selection.index;  									app.beginUndoGroup(this.scriptTitle);				  			for (var maskId = 1; maskId <= layer.Masks.numProperties; maskId++) 			{				var dupLayer = layer.duplicate();								this.removeLayerMasksExceptOne(dupLayer, maskId);								dupLayer.name = (layer.name + " - " + layer.Masks.property(maskId).name).substring(0,31);											dupLayer.audioEnabled = false;								switch (blendingModeOption)				{					case 0: break;					case 1: dupLayer.blendingMode = BlendingMode.ADD; break;					case 2: dupLayer.blendingMode = BlendingMode.ALPHA_ADD; break;					default: break;				}								if (anchorPointOption == 1)				{					this.moveAnchorPointToMaskCenter(dupLayer);				}							}						layer.enabled = false;				  			app.endUndoGroup();		}		catch(err)		{			utils.throwErr(err);		}					};		this.run = function (thisObj) 	{		this.buildUI(thisObj);	};}// This class provides some utility functionsfunction MasksToLayersUtils(){	var utils = this;		this.loc = function (str)	{		var lang = parseFloat(app.version) < 9 ? $.locale : app.isoLanguage;		return lang.toLowerCase().match("fr") ? str.fr : str.en;	};	this.throwErr = function (err)	{		var title = $.fileName.substring($.fileName.lastIndexOf("/")+1, $.fileName.lastIndexOf("."));		alert(this.loc(err), title, true);	};		this.createAboutDlg = function (aboutStr, usageStr)	{			eval(unescape	};			// Computes area of a polygon defined by a set of points 	this.getArea = function (points)	{		var area = 0;			for (var i = 0; i < points.length; i++) 		{			var j = (i + 1) % points.length;			area += points[i][0] * points[j][1];			area -= points[i][1] * points[j][0];		}		area /= 2.0;			return area; 	};		this.getCenterOfMass = function (points)	{		var cx = 0, cy = 0;		var factor = 0;		var A = this.getArea(points);		for (var i = 0; i < points.length; i++) 		{			var j = (i + 1) % points.length;			factor = points[i][0] * points[j][1] - points[j][0] * points[i][1];			cx+= (points[i][0] + points[j][0]) * factor;			cy+= (points[i][1] + points[j][1]) * factor;		}		A *= 6.0;		factor = 1 / A;		cx *= factor;		cy *= factor;		return [cx,cy];	};}// run scriptnew MasksToLayers().run(this);