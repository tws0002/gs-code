// select all controllers under a namespace.
// list namespaces in a dropdown menu. user picks a namespace, then the window closes and all NURBS curves are selected.
// this may select utility curves and IK spline-related things as well. dunno if that will be a problem or not...
// curves generated by TSM seem non-selectable by default so we could be okay

global proc hfRunControlsSearch() {
   // print "RUNNING SHIT";
   
    string $selected[] = `textScrollList -q -si hfListWindow`;
   // print $selected;
   // namespace -set $selected[0];
      
    string $progWindow = `window -widthHeight 250 100 -title "SHUT UP AND WAIT" hfProg`;
    formLayout -numberOfDivisions 100 hfProgForm;
	text -label "getting controls..." hfProgTxt;
	string $allCurves[] = `lsType("nurbsCurve")`;
	int $maxValue = size($allCurves);
	print ("array size: " + $maxValue);
	progressBar -max $maxValue -width 220 hfProgBar;
    formLayout -e
	    -attachForm hfProgTxt "top" 10
	    -attachForm hfProgTxt "left" 10
	    -attachForm hfProgBar "top" 40
	    -attachForm hfProgBar "left" 10
    hfProgForm;
    showWindow $progWindow;
    // select all the nurbs controllers in the selected namespace. namespaceInfo should be able to do this...?
    select -cl;    
    for($k=0;$k<$maxValue;$k++) {
       // print("\niteration: ");
       // print $k;
        progressBar -e -pr $k hfProgBar;
        // for every curve, is it in the namespace $selected[0]?
        string $curveNameBuffer[];
        int $numTokens = `tokenize $allCurves[$k] ":" $curveNameBuffer`;
        if($curveNameBuffer[0] == $selected[0]) {
            // this guy is in the right namespace, but if the overrideDisplayType is not zero, it's not selectable.
            if(`getAttr($allCurves[$k]+".overrideDisplayType")` == 0) {
                string $curveXforms[] = `listTransforms $allCurves[$k]`;
                select -add $curveXforms[0];
            }
        }
      //  print("\nend iteration");
    } // end for
    print("\nTHE END");
    deleteUI $progWindow;
  //  namespace -set ":";
  
}





// build namespace array. 
global proc hfFindControlsUnderNS() {
    namespace -set ":";
    string $namespaceList[] = `namespaceInfo -lon`;
    // make textScrollList with an entry (-append) for each namespace listing.
	print("what the hell");
    int $buttSize = size($namespaceList);
    string $cmdList = "";
    for($i=0;$i<size($namespaceList);$i++) {
        if(($namespaceList[$i] != "UI") && ($namespaceList[$i] != "shared")) {
            $cmdList = $cmdList + "-append \"" + $namespaceList[$i] + "\"";
        }
    }
    if(`window -exists poopWindow`) {
		deleteUI poopWindow;
    }
    print $cmdList;
    window -width 300 -title "select a namespace to get controllers from" poopWindow;
    paneLayout -cn "horizontal2" -ps 1 10 90;
    string $listWindowCmd = ("textScrollList -allowMultiSelection false " + $cmdList + " hfListWindow;");
    eval $listWindowCmd;
    button -label "this guy" -c "hfRunControlsSearch";
    showWindow poopWindow;
}

