//CopyRight Dustin Nelson 2010-2016. Please do not distribute
//http://www.creativecrash.com/maya/script/-rapid-rig-modular-procedural-auto-rig-for-maya
//Script for selecting controls on Rapid Rig: Modular rigs.
//VERSION 2.0.1
//July 25, 2016
//FILE IS NOT INTENDED TO BE HARMFUL, HOWEVER USE AT YOUR OWN RISK
/*/////////////////////////////////////////////////////////////////////////////
// 
//	INSTRUCTIONS:
//	1. INSTALLATION
//	TYPE IN THE FOLLOWING COMMAND IN MAYA TO GET YOUR SCRIPT DIRECTORY:
//
//	internalVar -userScriptDir;
//
//	2. PUT THE RapidRig_Modular_V2_Selector.mel FILE IN THAT DIRECTORY.
//
//	3. START UP MAYA, ENTER THE FOLLOWING COMMAND INTO
//	THE COMMAND LINE OR THE SCRIPT EDITOR:
//
//	RapidRig_Modular_V2_Selector;
//
//	4. TO HAVE EASY ACCESS TO SCRIPT, CREATE A SHELF BUTTON
//	WITH ONLY THAT COMMAND. EVERY TIME YOU HIT THE BUTTON,
//	THE RAPID RIG INTERFACE WILL POP UP. HAPPY ANIMATING!
//
////////////////////////////////////////////////////////////////////////*/

////////////////////////////////////////////////////////////////////////
//ARM PROCEDURES////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////

global proc modSelectControl(string $button)
{
	string $modControl = `button -q -ann $button`;
	if (`objExists $modControl`)
	{
		int $mods = `getModifiers`;
		if ($mods ==0)
		{
			select $modControl;
		}
		else if ($mods ==1)			
		{//SHIFT
			select -tgl $modControl;
		}
		else if ($mods ==4)	
		{//ALT
			select -d $modControl;
		}
		else if ($mods ==5)	
		{//WINDOWS/APPLE
			select -add $modControl;
		}
	}
	else
	{
		warning ($modControl + " does not exist");
	}
}

global proc modSelectControlFk(string $button, int $dropDownInt)
{
	print (`button -q -ann $button`);
	print "\n";
	string $modControl = `button -q -ann $button`;
	string $modControl2 = `button -q -ann $button`;
	int $selectType = `optionMenu -q -sl ("FkIkChainSelectMenu" + $dropDownInt)`;
	int $mods = `getModifiers`;
	if ($selectType == 1)
	{
		$modControl = ($modControl + "_Ctrl");
	}
	else if ($selectType == 2)
	{
		$modControl = ($modControl + "Spline_Ctrl");
	}
	else if ($selectType == 3)
	{
		$modControl = ($modControl + "_Ctrl");
		$modControl2 = ($modControl2 + "Spline_Ctrl");
	}

	if (`objExists $modControl`)
	{
		if ($mods ==0)
		{
			select $modControl;
		}
		else if ($mods ==1)			
		{
			select -tgl $modControl;
		}
		else if ($mods ==4)	
		{
			select -d $modControl;
		}
		else if ($mods ==5)	
		{
			select -add $modControl;
		}
	}
	else
	{
		warning ($modControl + " does not exist");
	}
	if (`objExists $modControl2` && $selectType == 3)
	{
		if ($mods ==0)
		{
			select $modControl $modControl2;
		}
		else if ($mods ==1)			
		{
			select -tgl $modControl $modControl2;
		}
		else if ($mods ==4)	
		{
			select -d $modControl $modControl2;
		}
		else if ($mods ==5)	
		{
			select -add $modControl $modControl2;
		}
	}
	else if (!`objExists $modControl2` && $selectType == 3)
	{
		warning ($modControl2 + " does not exist");
	}
}

global proc modSelectAllModulesControl(string $button)
{
	string $modControl = `button -q -ann $button`;
	print $modControl;
	$allControlShapes = `listRelatives -ad -type "nurbsCurve" ($modControl + "Grp")`;
	$allControls = `listRelatives -p -type "transform" $allControlShapes`;
	string $nonControls[];
	for ($each in $allControls)
	{
		if (`objExists ($each  + ".nonControl")`)
		{
			$nonControls = `ls $each $nonControls`;
		}
	}
	int $mods = `getModifiers`;
	if ($mods ==0)
	{
		select $allControls;
	}
	else if ($mods ==1)			
	{
		select -tgl $allControls;
	}
	else if ($mods ==4)	
	{
		select -d $allControls;
	}
	else if ($mods ==5)	
	{
		select -add $allControls;
	}
	select -d $nonControls;
}

global proc modIkToFk(string $button)
{
	string $modControl = `button -q -ann $button`;
	
	$branchType = `getAttr ($modControl + "Grp.topNode")`;
	if ($branchType == "arm")
	{

		setAttr ($modControl + "_Switch_Ctrl.switchIkFk") 0;
		$wristT = `xform -q -t  ($modControl + "_WristIkToFkLctr")`;
		$wristR = `xform -q -ro  ($modControl + "_WristIkToFkLctr")`;
		$wristS = `getAttr  ($modControl + "_WristIkToFkLctr.sx")`;
		
		setAttr (($modControl + "_WristIk_Ctrl.translate"), $wristT[0], $wristT[1], $wristT[2]);
		setAttr (($modControl + "_WristIk_Ctrl.rotate"), $wristR[0], $wristR[1], $wristR[2]);
		setAttr ($modControl + "_WristIk_Ctrl.sx") $wristS;
		
		$elbowT = `xform -q -t  ($modControl + "_ElbowIkToFkAimLctr")`;
		setAttr (($modControl + "_ElbowIk_Ctrl.translate"), $elbowT[0], $elbowT[1], $elbowT[2]);

		if (`getAttr ($modControl + "Grp.elbowNum")` == 2)
		{
			$multiplier = 1.0;
			if (`objExists ($modControl + "LowerArmIk_Ctrl.leftControl")`)
			{
				$multiplier = -1.0;
			}
			delete `aimConstraint -aimVector ($multiplier * -1) 0 0 -upVector 0 1 0 -worldUpType "objectrotation"
			-worldUpVector 0 ($multiplier * 1) 0 -worldUpObject ($modControl + "_Elbow2Fk_Ctrl")
			($modControl + "_Elbow2Fk_Ctrl") ($modControl + "_LowerArmIk_Ctrl")`;
		}
	}
	else if ($branchType == "leg")
	{
		$AnkleIkToFkLctr_T = `xform -q -t ($modControl + "_AnkleIkToFkLctr")`;
		$AnkleIkToFkLctr_R = `xform -q -ro ($modControl + "_AnkleIkToFkLctr")`;
		setAttr (($modControl + "_FootIk_Ctrl.translate"), $AnkleIkToFkLctr_T[0], $AnkleIkToFkLctr_T[1], $AnkleIkToFkLctr_T[2]);
		setAttr (($modControl + "_FootIk_Ctrl.rotate"), $AnkleIkToFkLctr_R[0], $AnkleIkToFkLctr_R[1], $AnkleIkToFkLctr_R[2]);
	
		$KneeIkToFkAimLctr_T = `xform -q -t ($modControl + "_KneeIkToFkAimLctr")`;
		setAttr (($modControl + "_KneeIk_Ctrl.translate"), $KneeIkToFkAimLctr_T[0], $KneeIkToFkAimLctr_T[1], $KneeIkToFkAimLctr_T[2]);
		
		setAttr ($modControl + "_Switch_Ctrl.switchIkFk") 0;
	
		$HipFk_S = `getAttr ($modControl + "_HipFk_Ctrl.sx")`;
		$Hip_S_MD = `getAttr ($modControl + "_HipScale_MD.input1X")`;
		setAttr ($modControl + "_FootIk_Ctrl.limbScale") ($HipFk_S/$Hip_S_MD);

		if (`getAttr ($modControl + "Grp.kneeNum")` == 2)
		{
			$multiplier = 1.0;
			if (`objExists ($modControl + "_LowerLegIk_Ctrl.leftControl")`)
			{
				$multiplier = -1.0;
			}
			delete `aimConstraint -aimVector 0 1 0 -upVector 0 0 1 -worldUpType "objectrotation"
			-worldUpVector 0 0 ($multiplier * 1) -worldUpObject ($modControl + "_Knee2Fk_Ctrl")
			($modControl + "_Knee2Fk_Ctrl") ($modControl + "_LowerLegIk_Ctrl")`;
		}
		setAttr ($modControl + "_FootIk_Ctrl.kneeLock") 0;
		setAttr ($modControl + "_FootIk_Ctrl.toe_pivot") 0;
		setAttr ($modControl + "_FootIk_Ctrl.ball_pivot") 0;
		setAttr ($modControl + "_FootIk_Ctrl.heel_pivot") 0;
		setAttr ($modControl + "_FootIk_Ctrl.ball_roll") 0;
		setAttr ($modControl + "_FootIk_Ctrl.toe_heel_roll") 0;
		setAttr ($modControl + "_FootIk_Ctrl.bank_in_out") 0;
		setAttr ($modControl + "_FootIk_Ctrl.toe_roll") (`getAttr ($modControl + "_BallJntFk.rotateY")` / -9.0);
		setAttr ($modControl + "_FootIk_Ctrl.stretch") 0;
		setAttr ($modControl + "_FootIk_Ctrl.dampen_softness") 0;
	}
}

global proc modFkToIk(string $button)
{
	string $modControl = `button -q -ann $button`;
	
	$branchType = `getAttr ($modControl + "Grp.topNode")`;
	if ($branchType == "arm")
	{

		$ShldrJntIkRot = `xform -q -ws -a -ro ($modControl + "_ShoulderJntIk")`;
		xform -ws -a -ro $ShldrJntIkRot[0] $ShldrJntIkRot[1] $ShldrJntIkRot[2] ($modControl + "_ShoulderFk_Ctrl");
		setAttr ($modControl + "_ShoulderFk_Ctrl.sx") `getAttr ($modControl + "_ShoulderJntIk.sx")`;
		
		if (`getAttr ($modControl + "Grp.elbowNum")` == 1)
		{
			$constraint = `orientConstraint -skip x -skip z ($modControl + "_ElbowJntIk") ($modControl + "_ElbowFk_Ctrl")`;
			$ElbowIk_RY = `getAttr ($modControl + "_ElbowFk_Ctrl.ry")`;
			setAttr ($modControl + "_ElbowFk_Ctrl.rotateY") ($ElbowIk_RY * 1);
			delete $constraint;
		}
		else
		{
			$constraint = `orientConstraint -skip x -skip z ($modControl + "_Elbow1JntIk") ($modControl + "_Elbow1Fk_Ctrl")`;
			$Elbow1Ik_RY = `getAttr ($modControl + "_Elbow1Fk_Ctrl.ry")`;
			setAttr ($modControl + "_Elbow1Fk_Ctrl.rotateY") ($Elbow1Ik_RY * 1);
			delete $constraint;
			
			$constraint = `orientConstraint ($modControl + "_Elbow2JntIk") ($modControl + "_Elbow2Fk_Ctrl")`;
			$Elbow2Ik_RY = `getAttr ($modControl + "_Elbow2Fk_Ctrl.ry")`;
			setAttr ($modControl + "_Elbow2Fk_Ctrl.rotateY") ($Elbow2Ik_RY * 1);
			delete $constraint;
		}
		$WristJntIkRot = `xform -q -ws -a -ro ($modControl + "_WristJntIk")`;
		xform -ws -a -ro $WristJntIkRot[0] $WristJntIkRot[1] $WristJntIkRot[2] ($modControl + "_WristFk_Ctrl");
		setAttr ($modControl + "_WristFk_Ctrl.sx") `getAttr ($modControl + "_WristIk_Ctrl.sx")`;
			
		setAttr ($modControl + "_Switch_Ctrl.switchIkFk") 1;
	}
	else if ($branchType == "leg")
	{
		$HipJntIkRot = `xform -q -ws -a -ro ($modControl + "_HipJntIk")`;
		xform -ws -a -ro $HipJntIkRot[0] $HipJntIkRot[1] $HipJntIkRot[2] ($modControl + "_HipFk_Ctrl");
		setAttr ($modControl + "_HipFk_Ctrl.sx") `getAttr ($modControl + "_HipJntIk.sx")`;
		
		if (`getAttr ($modControl + "Grp.kneeNum")` == 1)
		{
			$constraint = `orientConstraint -skip x -skip z ($modControl + "_KneeJntIk") ($modControl + "_KneeFk_Ctrl")`;
			$KneeIk_RY = `getAttr ($modControl + "_KneeFk_Ctrl.ry")`;
			setAttr ($modControl + "_KneeFk_Ctrl.rotateY") ($KneeIk_RY * 1);
			delete $constraint;
		}
		else
		{
			$constraint = `orientConstraint -skip x -skip z ($modControl + "_Knee1JntIk") ($modControl + "_Knee1Fk_Ctrl")`;
			$Knee1Ik_RY = `getAttr ($modControl + "_Knee1Fk_Ctrl.ry")`;
			setAttr ($modControl + "_Knee1Fk_Ctrl.rotateY") ($Knee1Ik_RY * 1);
			delete $constraint;
			
			$constraint = `orientConstraint ($modControl + "_Knee2JntIk") ($modControl + "_Knee2Fk_Ctrl")`;
			$Knee2Ik_RY = `getAttr ($modControl + "_Knee2Fk_Ctrl.ry")`;
			setAttr ($modControl + "_Knee2Fk_Ctrl.rotateY") ($Knee2Ik_RY * 1);
			delete $constraint;
		}
		$AnkleJntIkRot = `xform -q -ws -a -ro ($modControl + "_AnkleJntIk")`;
		xform -ws -a -ro $AnkleJntIkRot[0] $AnkleJntIkRot[1] $AnkleJntIkRot[2] ($modControl + "_AnkleFk_Ctrl");

		$ballJntR = `getAttr ($modControl + "_BallJntIk.rotate")`;
		setAttr (($modControl + "_BallFk_Ctrl.rotate"), $ballJntR[0], $ballJntR[1], $ballJntR[2]);
		
		$toeJntR = `getAttr ($modControl + "_ToeJntIk.rotate")`;
		setAttr (($modControl + "_ToeFk_Ctrl.rotate"), $toeJntR[0], $toeJntR[1], $toeJntR[2]);
		
		setAttr ($modControl + "_Switch_Ctrl.switchIkFk") 1;
	}
}

////////////////////////////////////////////////////////////////////////////
//BOTTOM BUTTONS////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////


global proc modSelectAll(string $modRigName)
{
	select ($modRigName + "*_Ctrl");
}


global proc modResetTransforms(string $modRigName)
{
	$initialSelection = `ls -sl`;
	string $modControls[];
	if (`getModifiers` == 1)
	{//SHIFT
		select ($modRigName + "*_Ctrl");
		$modControls = `ls -sl`;
	}
	else
	{
		$modControls = `ls -sl`;
	}
	
	for ($each in $modControls)
	{
		if (`objExists ($each + ".modCoreName")`||`objExists ($each + ".isCOG_Ctrl")`)
		{
			$channels = `listAttr -k -u -v -s $each`;
			string $eachChannel;
			for ($eachChannel in $channels)
			{
				if ($eachChannel=="translateX"||$eachChannel=="translateY" || $eachChannel=="translateZ" || 
				$eachChannel=="rotateX" || $eachChannel=="rotateY" || $eachChannel=="rotateZ" || 
				$eachChannel=="scaleX" || $eachChannel=="scaleY" || $eachChannel=="scaleZ")
				{
					float $defaultVal[] = `attributeQuery -node $each -ld $eachChannel`;
					setAttr ($each + "." + $eachChannel) $defaultVal[0];
				}
			}
		}
	}
}

global proc modResetExtras(string $modRigName)
{
	$initialSelection = `ls -sl`;
	string $modControls[];
	if (`getModifiers` == 1)
	{//SHIFT
		select ($modRigName + "*_Ctrl");
		$modControls = `ls -sl`;
	}
	else
	{
		$modControls = `ls -sl`;
	}
	for ($each in $modControls)
	{
		if (`objExists ($each + ".modCoreName")`)
		{
			$channels = `listAttr -k -u -v -s $each`;
			string $eachChannel;
			for ($eachChannel in $channels)
			{
				if ($eachChannel!="translateX"&&$eachChannel!="translateY" && $eachChannel!="translateZ" && 
				$eachChannel!="rotateX" && $eachChannel!="rotateY" && $eachChannel!="rotateZ" && 
				$eachChannel!="scaleX" && $eachChannel!="scaleY" && $eachChannel!="scaleZ")
				{
					float $defaultVal[] = `attributeQuery -node $each -ld $eachChannel`;
					setAttr ($each + "." + $eachChannel) $defaultVal[0];
				}
			}
		}
	}
}

global proc modSideToSidePose(string $modRigName, string $modSide)
{
	$initialSelection = `ls -sl`;
	string $modControls[];
	if (`getModifiers` == 1)
	{//SHIFT
		select ($modRigName + "*_Ctrl");
		select -d ($modRigName + "MAIN_Ctrl") ($modRigName + "MAIN_Inner_Ctrl") ($modRigName + "MAIN_Offset_Ctrl") ;
		$modControls = `ls -sl`;
	}
	else
	{
		$modControls = `ls -sl`;
		select -d ($modRigName + "MAIN_Ctrl") ($modRigName + "MAIN_Inner_Ctrl") ($modRigName + "MAIN_Offset_Ctrl") ;
	}
	string $modCoreName;

	//FIND WHICH WAY TO MIRROR
	string $oppChannel;
	string $oppPrfx;
	float $behavior = 1;
	if ($modSide == "leftToRight")
	{
		$oppChannel = "rightControl";
		$oppPrfx = `getAttr ($modRigName + "MAIN_Ctrl.leftPrefix")`;
	}
	else if ($modSide == "rightToLeft")
	{
		$oppChannel = "leftControl";
		$oppPrfx = `getAttr ($modRigName + "MAIN_Ctrl.rightPrefix")`;
	}
	string $each;
	for ($each in $modControls)
	{
		if (`objExists ($each + ".modCoreName")` && `objExists ($each + "." + $oppChannel)`)
		{
			$moduleType = `getAttr ($each + ".moduleType")`;
			if ($moduleType != "auxiliary")
			{
				$modCoreName = `getAttr ($each + ".modCoreName")`;	
			}
			else
			{
				$modCoreName = (`getAttr ($each + ".modCoreName")` + "Aux");	
			}
			
			if (`getAttr ($modRigName + $modCoreName + "Grp.mirror")` == 1)
			{
				$behavior = 1;
			}
			$channels  = `listAttr -k -u -v -s $each`;
			
			$channelNum = `size $channels`;
			for ($eachChannel in $channels)
			{
				float $channelVal = `getAttr ($each + "." + $eachChannel)`;
				$oppControlConnections = `listConnections ($each + "." + $oppChannel)`;
				$oppControl = $oppControlConnections[0];

				
				$moduleType = `getAttr ($each + ".moduleType")`;

				//SPLINE
				if ($moduleType == "spline")
				{
					if (`getAttr ($modRigName + $modCoreName + "Grp.mirror")` == 0)
					{
						if ($eachChannel == "rotateX" || $eachChannel == "rotateY" || $eachChannel == "rotateZ")
						{
							setAttr ($oppControl + "." + $eachChannel) $channelVal;
						}
						else if ($eachChannel == "translateX" || $eachChannel == "translateY" || $eachChannel == "translateZ")
						{
							setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
						}
					}
					else if (`getAttr ($modRigName + $modCoreName + "Grp.mirror")` == 1)
					{
						if (`getAttr ($modRigName + $modCoreName + "Grp.twistAxis")`== "x")
						{
							if ($eachChannel == "translateX" || $eachChannel == "translateY" || $eachChannel == "rotateZ")
							{
								setAttr ($oppControl + "." + $eachChannel) $channelVal;
							}
							else if ($eachChannel == "translateZ" || $eachChannel == "rotateX" || $eachChannel == "rotateY")
							{
								setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
							}							
						}
						if (`getAttr ($modRigName + $modCoreName + "Grp.twistAxis")`== "y")
						{
							if ($eachChannel == "translateY" || $eachChannel == "translateZ" || $eachChannel == "rotateX")
							{
								setAttr ($oppControl + "." + $eachChannel) $channelVal;
							}
							else if ($eachChannel == "translateX" || $eachChannel == "rotateY" || $eachChannel == "rotateZ")
							{
								setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
							}							
						}

					}					
				}				
				//ARM
				else if ($moduleType == "arm" || $moduleType == "leg" || $moduleType == "fkChain" || $moduleType == "head" || $moduleType == "auxiliary")
				{
					if (`getAttr ($modRigName + $modCoreName + "Grp.mirror")` == 0 && !`gmatch $each "*Ik_Ctrl"`)
					{
						if ($eachChannel == "rotateX" || $eachChannel == "rotateY" || $eachChannel == "rotateZ")
						{
							setAttr ($oppControl + "." + $eachChannel) $channelVal;
						}
						else if ($eachChannel == "translateX" || $eachChannel == "translateY" || $eachChannel == "translateZ")
						{
							setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
						}
						else
						{
							setAttr ($oppControl + "." + $eachChannel) $channelVal;
						}
					}
					else 
					{
						if ($eachChannel == "translateX" || $eachChannel == "rotateY" || $eachChannel == "rotateZ")
						{
							setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
						}
						else
						{
							setAttr ($oppControl + "." + $eachChannel) $channelVal;
						}
					}
				}

				//EYE
				else if ($moduleType == "lookAt")
				{
					if ($eachChannel == "translateX" || $eachChannel == "translateY")
					{
						setAttr ($oppControl + "." + $eachChannel) $channelVal;
					}
					else if ($eachChannel == "translateZ")
					{
						setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
					}
					else
					{
						setAttr ($oppControl + "." + $eachChannel) $channelVal;
					}
				}
			}
		}
	}
	select $initialSelection;
}

global proc modMirrorPose(string $modRigName)
{
	$initialSelection = `ls -sl`;
	string $modControls[];
	if (`getModifiers` == 1)
	{//SHIFT
		select ($modRigName + "*_Ctrl");
		select -d ($modRigName + "MAIN_Ctrl") ($modRigName + "MAIN_Inner_Ctrl") ($modRigName + "MAIN_Offset_Ctrl") ;
		$modControls = `ls -sl`;
	}
	else
	{
		$modControls = `ls -sl`;
		select -d ($modRigName + "MAIN_Ctrl") ($modRigName + "MAIN_Inner_Ctrl") ($modRigName + "MAIN_Offset_Ctrl") ;
	}
	
	//DEFINE STRINGS
	string $modCoreName;

	//RANDOM VALUE TO CHECK MIRRORING
	float $randVal = (rand (10,15));
	

	//DEFINE CONTROLS
	string $centerControls[];
	string $leftControls[];
	string $rightControls[];
	
	string $rightChannels[];
	string $leftChannels[];
	for ($each in $modControls)
	{
		if (`objExists ($each + ".modRigName")` && ! `objExists ($each + ".nonControl")`)
		{
			if (`objExists ($each + ".rightControl")`)
			{
				select $leftControls $each;
				$leftControls = `ls -sl`;
			}
			else if (`objExists ($each + ".leftControl")`)
			{
				select $rightControls $each;
				$rightControls = `ls -sl`;
			}
			else
			{
				select $centerControls $each;
				$centerControls = `ls -sl`;
			}
		}
	}

	//CENTER CONTROLS
	for ($eachCenterControl in $centerControls)
	{
		string $modType;
		if (`objExists ($eachCenterControl + ".moduleType")`)
		{
			$modType = `getAttr ($eachCenterControl + ".moduleType")`;
		}
		$channels = `listAttr -k -u -v -s $eachCenterControl`;
		for ($eachChannel in $channels)
		{
			//print ($eachChannel + "\n");
			float $channelVal = `getAttr ($eachCenterControl + "." + $eachChannel)`;
			
			if ($modType != "fkChain")
			{
				if ($eachChannel == "translateX" || $eachChannel == "rotateY" || $eachChannel == "rotateZ" ||
				$eachChannel == "footTilt" || $eachChannel == "ballSwivel")
				{
					setAttr ($eachCenterControl + "." + $eachChannel) ($channelVal * -1);
				}
			}
			else if ($eachChannel == "rotateX" || $eachChannel == "rotateY")
			{
				setAttr ($eachCenterControl + "." + $eachChannel) ($channelVal * -1);
			}
		}		
	}
	
	//MIRROR LEFT TO RIGHT
	for ($eachLeftControl in $leftControls)
	{
		$eachRightControlConnections = `listConnections ($eachLeftControl + ".rightControl")`;
		$eachRightControl = $eachRightControlConnections[0];
		if (`objExists $eachRightControl`)
		{
			//ADD TEMP ATTRIBUTE TO AVOID DOUBLE MIRRORING
			setAttr ($eachRightControl + ".isMirrored") $randVal;
			
			$leftChannels  = `listAttr -k -u -v -s $eachLeftControl`;
			$rightChannels = `listAttr -k -u -v -s $eachRightControl`;
			$channelNum = `size $leftChannels`;
			$moduleType = `getAttr ($eachLeftControl + ".moduleType")`;

			if ($moduleType != "auxiliary")
			{
				$modCoreName = `getAttr ($eachLeftControl + ".modCoreName")`;	
			}
			else
			{
				$modCoreName = (`getAttr ($eachLeftControl + ".modCoreName")` + "_Aux");	
			}

			for ($eachSideChannel in $leftChannels)
			{
				float $leftVal = `getAttr ($eachLeftControl + "." + $eachSideChannel)`;
				float $rightVal = `getAttr ($eachRightControl + "." + $eachSideChannel)`;

				//SPLINE
				if ($moduleType == "spline")
				{
					if (`getAttr ($modRigName + $modCoreName + "Grp.mirror")` == 0)
					{
						if ($eachSideChannel == "rotateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
						}
						else if ($eachSideChannel == "translateX" || $eachSideChannel == "translateY" || $eachSideChannel == "translateZ")
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
						}
					}
					else if (`getAttr ($modRigName + $modCoreName + "Grp.mirror")` == 1)
					{
						if (`getAttr ($modRigName + $modCoreName + "Grp.twistAxis")`== "x")
						{
							if ($eachSideChannel == "translateX" || $eachSideChannel == "translateY" || $eachSideChannel == "rotateZ")
							{
								setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
								setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
							}
							else if ($eachSideChannel == "translateZ" || $eachSideChannel == "rotateX" || $eachSideChannel == "rotateY")
							{
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
							}							
						}
						if (`getAttr ($modRigName + $modCoreName + "Grp.twistAxis")`== "y")
						{
							if ($eachSideChannel == "translateY" || $eachSideChannel == "translateZ" || $eachSideChannel == "rotateX")
							{
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
							}
							else if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
							{
								setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
								setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
							}							
						}

					}					
				}
				
				//ARM LEG FK HEAD AND AUX
				else if ($moduleType == "arm" || $moduleType == "leg" || $moduleType == "fkChain" || $moduleType == "head" || $moduleType == "auxiliary" )
				{
					if (`getAttr ($modRigName + $modCoreName + "Grp.mirror")` == 0 && !`gmatch $eachLeftControl "*Ik_Ctrl"`)
					{
						if ($eachSideChannel == "rotateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
						}
						else if ($eachSideChannel == "translateX" || $eachSideChannel == "translateY" || $eachSideChannel == "translateZ")
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
						}
						else
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
						}
					}
					else 
					{
						if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
						}
						else
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
						}
					}
				}

				//EYE
				else if ($moduleType == "lookAt")
				{
					if ($eachSideChannel == "translateX" || $eachSideChannel == "translateY")
					{
						setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
						setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
					}
					else if ($eachSideChannel == "translateZ")
					{
						setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
						setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
					}
					else
					{
						setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
						setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
					}
				}
			}
		}
	}
	
	//MIRROR RIGHT TO LEFT
	for ($eachRightControl in $rightControls)
	{
		$modCoreName = `getAttr ($eachRightControl + ".modCoreName")`;

		//CHECK IF THE RIGHT CONTROL HAS ALREADY BEEN MIRRORED, AND SKIP IF TRUE
		$isMirrored = `getAttr ($eachRightControl + ".isMirrored")`;
		
		if ($isMirrored != $randVal)
		{
			$eachLeftControlConnections = `listConnections ($eachLeftControl + ".leftControl")`;
			$eachLeftControl = $eachLeftControlConnections[0];
			if (`objExists $eachLeftControl`)
			{
				$rightChannels  = `listAttr -k -u -v -s $eachRightControl`;
				$leftChannels   = `listAttr -k -u -v -s $eachLeftControl`;
				$channelNum = `size $rightChannels`;
				for ($eachSideChannel in $rightChannels)
				{
					float $rightVal = `getAttr ($eachRightControl + "." + $eachSideChannel)`;
					float $leftVal = `getAttr ($eachLeftControl + "." + $eachSideChannel)`;
					
					$moduleType = `getAttr ($eachRightControl + ".moduleType")`;
	
					//SPLINE
					if ($moduleType == "spline")
					{
						if (`getAttr ($modRigName + $modCoreName + "Grp.mirror")` == 0)
						{
							if ($eachSideChannel == "rotateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
							{
								setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
								setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
							}
							else if ($eachSideChannel == "translateX" || $eachSideChannel == "translateY" || $eachSideChannel == "translateZ")
							{
								setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
								setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
							}
						}
						else if (`getAttr ($modRigName + $modCoreName + "Grp.mirror")` == 1)
						{
							if (`getAttr ($modRigName + $modCoreName + "Grp.twistAxis")`== "x")
							{
								if ($eachSideChannel == "translateX" || $eachSideChannel == "translateY" || $eachSideChannel == "rotateZ")
								{
									setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
									setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
								}
								else if ($eachSideChannel == "translateZ" || $eachSideChannel == "rotateX" || $eachSideChannel == "rotateY")
								{
								setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
								setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
								}							
							}
							if (`getAttr ($modRigName + $modCoreName + "Grp.twistAxis")`== "y")
							{
								if ($eachSideChannel == "translateY" || $eachSideChannel == "translateZ" || $eachSideChannel == "rotateX")
								{
								setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
								setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
								}
								else if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
								{
									setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
									setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
								}							
							}

						}					
					}
						
					//ARM LEG FK HEAD AND AUX
					else if ($moduleType == "arm" || $moduleType == "leg" || $moduleType == "fkChain" || $moduleType == "head" || $moduleType == "auxiliary" )
					{
						if (`getAttr ($modRigName + $modCoreName + "Grp.mirror")` == 0 && !`gmatch $eachLeftControl "*Ik_Ctrl"`)
						{
							if ($eachSideChannel == "rotateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
							{
								setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
								setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
							}
							else if ($eachSideChannel == "translateX" || $eachSideChannel == "translateY" || $eachSideChannel == "translateZ")
							{
								setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
								setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
							}
							else
							{
								setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
								setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
							}
						}
						else 
						{
							if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
							{
								setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
								setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
							}
							else
							{
								setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
								setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
							}
						}
					}

					//EYE
					else if ($moduleType == "lookAt")
					{
						if ($eachSideChannel == "translateX" || $eachSideChannel == "translateY")
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
						}
						else if ($eachSideChannel == "translateZ")
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
						}
						else
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
						}
					}
				}
			}
		}
		else
		{//RESET MIRRORED ATTRIBUTE
			setAttr ($eachRightControl + ".isMirrored") 1015;
		}
	}
	select $initialSelection;
}



global proc CreateModuPoserGUI(string $main_Ctrls[])
{
	//TOP TABS
	tabLayout -cr true modPoserTabs /*-w 660 -h 800*/;

	for ($main_Ctrl in $main_Ctrls)
	{
		if (`objExists ($main_Ctrl + ".isMain")`)
		{
			//GET RIG NAME
			string $modRigConnections[] = `listConnections ($main_Ctrl + ".modRigConnection")`;
			string $rigGrp = $modRigConnections[0];
			//print $rigGrp;
			//$modRigName = `getAttr ($rigGrp + ".modRigConnection")`;
			//string $modRigName;
			//if (`size $modRigConnections[0]` > 0)
			//{
				//$modRigName = ($modRigConnections[0] + "_");
				$modRigName = `getAttr ($main_Ctrl + ".modRigConnection")`;
			//}
			//else
			//{
			//	$modRigName = ($modRigConnections[0]);
			//}

			$hierarchy = `listRelatives -ad -type "transform" $main_Ctrl`;

			string $topNodes[];
			//$topNodes = `listRelatives -type "transform" $main_Ctrl`;
			string $each;
			int $topNodesSize = 0;

			for ($each in $hierarchy)
			{
				if (`objExists ($each + ".topNode")`)
				{
					//select $each $topNodes;
					$topNodes = `ls $each $topNodes`;
					$topNodesSize = `size $topNodes`;
				}
			}
			
			
			string $modForm = `formLayout -numberOfDivisions 100 /*-w 660 -h 800*/ ($modRigName + "FrameLayout")`;
			
			setParent $modForm;
			string $modSelectAllButton				= `button -label "Select All" -ann "Select all controls" -c ("modSelectAll(\"" + $modRigName + "\")")`;
			string $modSelectMAINButton				= `button -label "Select MAIN_Ctrl" -ann ($modRigName + "MAIN_Ctrl")`;
			string $modSelectCOGButton				= `button -label "Select COG_Ctrl" -ann ($modRigName + "COG_Ctrl")`;
			string $modSelectROOTButton				= `button -label "Select ROOT_Ctrl" -ann ($modRigName + "ROOT_Ctrl")`;
			string $modSelectROOTSecondaryButton	= `button -label "Select ROOTSecondary_Ctrl" -ann ($modRigName + "ROOTSecondary_Ctrl")`;
			string $modSelectROOTParentButton		= `button -label "Select ROOTParent_Ctrl" -ann ($modRigName + "ROOTParent_Ctrl")`;
			string $modResetTransformsButton 		= `button -label "Reset Transforms" -ann "Hold down the \"shift\" key to reset all transforms" -c ("modResetTransforms(\"" + $modRigName + "\")")`;
			string $modResetExtrasButton			= `button -label "Reset Other Channels" -ann "Hold down the \"shift\" key to reset all extra channels" -c ("modResetExtras(\"" + $modRigName + "\")")`;
			string $modMirrorButton					= `button -label "Mirror Pose" -ann "Hold down the \"shift\" key to mirror entire pose" -c ("modMirrorPose(\"" + $modRigName + "\")")`;
			string $modLeftToRightButton			= `button -label "Left Pose to Right" -bgc 0.2 0.20 0.65 -ann "Hold down the \"shift\" key to transfer entire pose from left to right" -c ("modSideToSidePose(\"" + $modRigName + "\", \"leftToRight\")")`;
			string $modRightToLeftButton			= `button -label "Right Pose to Left" -bgc 0.65 0.15 0.15 -ann "Hold down the \"shift\" key to transfer entire pose from right to left" -c ("modSideToSidePose(\"" + $modRigName + "\", \"rightToLeft\")")`;
			button -edit -command ("modSelectControl " + $modSelectMAINButton) $modSelectMAINButton;
			button -edit -command ("modSelectControl " + $modSelectROOTButton) $modSelectROOTButton;
			button -edit -command ("modSelectControl " + $modSelectROOTSecondaryButton) $modSelectROOTSecondaryButton;
			button -edit -command ("modSelectControl " + $modSelectROOTParentButton) $modSelectROOTParentButton;
			button -edit -command ("modSelectControl " + $modSelectCOGButton) $modSelectCOGButton;
			formLayout -edit
			

			-af $modSelectMAINButton left 0
			-ap $modSelectMAINButton right 0 25
			-ac $modSelectMAINButton bottom 2 $modSelectROOTButton

			-ap $modSelectAllButton left 0 25
			-ap $modSelectAllButton right 0 75
			-ac $modSelectAllButton bottom 2 $modSelectROOTButton

			-ap $modSelectCOGButton left 0 75
			-af $modSelectCOGButton right 0
			-ac $modSelectCOGButton bottom 2 $modSelectROOTButton

			-af $modSelectROOTSecondaryButton left 0 
			-ap $modSelectROOTSecondaryButton right 0 30
			-ac $modSelectROOTSecondaryButton bottom 2 $modResetTransformsButton

			-ap $modSelectROOTButton left 0 30
			-ap $modSelectROOTButton right 0 70
			-ac $modSelectROOTButton bottom 2 $modResetTransformsButton

			-ap $modSelectROOTParentButton left 0 70
			-af $modSelectROOTParentButton right 0
			-ac $modSelectROOTParentButton bottom 2 $modResetTransformsButton

			-af $modResetTransformsButton left 0
			-ap $modResetTransformsButton right 0 50
			-ac $modResetTransformsButton bottom 2 $modMirrorButton
			
			-ap $modResetExtrasButton left 0 50
			-af $modResetExtrasButton right 0 
			-ac $modResetExtrasButton bottom 2 $modMirrorButton

			-af $modLeftToRightButton left 0
			-ap $modLeftToRightButton right 0 33
			-af $modLeftToRightButton bottom 0

			-ap $modMirrorButton left 0 33
			-ap $modMirrorButton right 0 67
			-af $modMirrorButton bottom 0
			
			-ap $modRightToLeftButton left 0 67
			-af $modRightToLeftButton right 0
			-af $modRightToLeftButton bottom 0
			
			$modForm;
			
			
			int $i = 0;

			
			paneLayout -configuration "vertical3" ($modRigName + "MainModSelectionPaneLayout");
			
			formLayout -edit
			-attachForm ($modRigName + "MainModSelectionPaneLayout") left 0
			-attachForm ($modRigName + "MainModSelectionPaneLayout") right 0
			-attachForm ($modRigName + "MainModSelectionPaneLayout") top 0
			-attachControl ($modRigName + "MainModSelectionPaneLayout") bottom 2 $modSelectAllButton
			$modForm;
			
			paneLayout -configuration "horizontal2" ($modRigName + "SubModSelectionPaneLayout1");
					
					//ARMS///////////////////////////////////////////////////////////////////////////////////////////
					int $i = 0;
						frameLayout -label "ARMS";
						scrollLayout ($modRigName + "ArmsScrollLayout");
						columnLayout ($modRigName + "ArmsColumnLayout");
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "arm")
							{
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										//CREATE PAIRING FRAME LAYOUT
										frameLayout -label ($moduleName + " (pair)")
										-bgc 0.17 0.17 0.17
										-w 184
										-collapsable 1 ($moduleName + "PairFrameLayout");
										columnLayout ($moduleName + "PairColumnLayout");

										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}
										
								}
								frameLayout -label $coreName
								-w 184
								-collapsable 1 
								-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z) ($modRigName + "ArmModFrameLayout" + $i);
								columnLayout;
								
								string $armsFormLayout = `formLayout -numberOfDivisions 100`;
								$elbowNum = `getAttr ($each + ".elbowNum")`;

								//CLAVICLE
								string $clavicleButton     = `button -label "Clavicle"   -w 114 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Clavicle_Ctrl")`;
								button -edit -command ("modSelectControl " + $clavicleButton) $clavicleButton;

								//Fk
								string $shoulderButton     = `button -label "ShldrFk"   -w 114 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_ShoulderFk_Ctrl")`;
								string $wristFkButton = `button -label "WristFk" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_WristFk_Ctrl")`;
								button -edit -command ("modSelectControl " + $shoulderButton) $shoulderButton;
								button -edit -command ("modSelectControl " + $wristFkButton) $wristFkButton;
								//Ik
								string $elbow1IkButton = `button -label "ElbowIk" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_ElbowIk_Ctrl")`;
								string $wristIkButton =  `button -label "WristIk" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_WristIk_Ctrl")`;
								button -edit -command ("modSelectControl " + $elbow1IkButton) $elbow1IkButton;
								button -edit -command ("modSelectControl " + $wristIkButton) $wristIkButton;
								
								//ELBOWS//	
								string $elbow1FkButton;
								string $elbow2FkButton;
								string $LowerArmIkButton;
								int $elbow2Offset = 0;
								if ($elbowNum == 1)
								{
									$elbow1FkButton = `button -label "ElbowFk"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_ElbowFk_Ctrl")`;
									button -edit -command ("modSelectControl " + $elbow1FkButton) $elbow1FkButton;
								}

								else
								{
									$elbow1FkButton = `button -label "Elbow1Fk"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Elbow1Fk_Ctrl")`;
									$elbow2FkButton = `button -label "Elbow2Fk"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Elbow2Fk_Ctrl")`;
									$LowerArmIkButton = `button -label "LwrArmIk"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_LowerArmIk_Ctrl")`;
									button -edit -command ("modSelectControl " + $elbow1FkButton) $elbow1FkButton;
									button -edit -command ("modSelectControl " + $elbow2FkButton) $elbow2FkButton;
									button -edit -command ("modSelectControl " + $LowerArmIkButton) $LowerArmIkButton;
									$elbow2Offset = 18;
								}


								//SWITCH
								string $armSwitch = `button -label "Switch_Ctrl" -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "_Switch_Ctrl")`;
								string $armIkToFk = `button -label "IkToFk"  -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName)`;
								string $armFkToIk = `button -label "FkToIk"  -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName)`;
								string $armALL    = `button -label ">ALL<"   -w 054 -h 18 -bgc .95 .95 .95 -ann ($modRigName + $coreName)`;
								button -edit -command ("modSelectControl " + $armSwitch) $armSwitch;
								button -edit -command ("modIkToFk " + $armIkToFk) $armIkToFk;
								button -edit -command ("modFkToIk " + $armFkToIk) $armFkToIk;
								button -edit -command ("modSelectAllModulesControl " + $armALL) $armALL;
								
								formLayout -edit
								//CLAVICLE
								-attachForm $clavicleButton "left" 2
								-attachForm $clavicleButton "top" 0
								//Fk
								-attachForm $shoulderButton "left" 2
								-attachForm $shoulderButton "top" 18
								
								-attachForm $elbow1FkButton "left" 2
								-attachForm $elbow1FkButton "top" 36

								-attachForm $wristFkButton "left" 2
								-attachForm $wristFkButton "top" ($elbow2Offset + 54)
								
								//Ik
								-attachForm $elbow1IkButton "left" 62
								-attachForm $elbow1IkButton "top" 36

								-attachForm $wristIkButton "left" 62
								-attachForm $wristIkButton "top" ($elbow2Offset + 54)
								
								//SWITCH
								-attachForm $armSwitch "left" 128
								-attachForm $armSwitch "top" 0

								-attachForm $armIkToFk "left" 128
								-attachForm $armIkToFk "top" 18

								-attachForm $armFkToIk "left" 128
								-attachForm $armFkToIk "top" 36
								
								-attachForm $armALL "left" 128
								-attachForm $armALL "top" 54
									
								$armsFormLayout;

								if ($elbowNum == 2)
								{
									formLayout -edit
									-attachForm $elbow2FkButton "left" 2
									-attachForm $elbow2FkButton "top" 54
									
									-attachForm $LowerArmIkButton "left" 62
									-attachForm $LowerArmIkButton "top" 54
									
									$armsFormLayout;
								}								
									
								setParent ($modRigName + "ArmModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;
								
								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent ($modRigName + "ArmsColumnLayout");
								}
							}
							//setParent ($modRigName + "ArmsColumnLayout");
							//$i = ($i + 1);
						}
						setParent ($modRigName + "SubModSelectionPaneLayout1");
						
						
					//LEGS///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "LEGS";
						scrollLayout ($modRigName + "LegsScrollLayout");
						columnLayout ($modRigName + "LegsColumnLayout");
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "leg")
							{
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										//CREATE PAIRING FRAME LAYOUT
										frameLayout -label ($moduleName + " (pair)")
										-bgc 0.17 0.17 0.17
										-w 184
										-collapsable 1 ($moduleName + "PairFrameLayout");
										columnLayout ($moduleName + "PairColumnLayout");
										//
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}
										
								}
								frameLayout -label $coreName
								-w 184
								-collapsable 1 
								-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z) ($modRigName + "LegModFrameLayout" + $i);
								columnLayout;
								
								string $legsFormLayout = `formLayout -numberOfDivisions 100`;
								$kneeNum = `getAttr ($each + ".kneeNum")`;
								
								//Fk
								string $hipButton     = `button -label "HipFk"   -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_HipFk_Ctrl")`;
								string $ankleFkButton = `button -label "AnkleFk" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_AnkleFk_Ctrl")`;
								string $ballFkButton  = `button -label "BallFk"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_BallFk_Ctrl")`;
								button -edit -command ("modSelectControl " + $hipButton) $hipButton;
								button -edit -command ("modSelectControl " + $ankleFkButton) $ankleFkButton;
								button -edit -command ("modSelectControl " + $ballFkButton) $ballFkButton;
								//Ik
								string $knee1IkButton = `button -label "KneeIk" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_KneeIk_Ctrl")`;
								string $heelIkButton =  `button -label "HeelIk" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_HeelIk_Ctrl")`;
								string $ballIkButton =  `button -label "BallIk" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_BallIk_Ctrl")`;
								string $toeIkButton =   `button -label "ToeIk"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_ToeIk_Ctrl")`;
								string $footIkButton =  `button -label "FootIk" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_FootIk_Ctrl")`;
								button -edit -command ("modSelectControl " + $knee1IkButton) $knee1IkButton;
								button -edit -command ("modSelectControl " + $heelIkButton) $heelIkButton;
								button -edit -command ("modSelectControl " + $ballIkButton) $ballIkButton;
								button -edit -command ("modSelectControl " + $toeIkButton) $toeIkButton;
								button -edit -command ("modSelectControl " + $footIkButton) $footIkButton;
								
								//KNEES//	
								string $knee1FkButton;
								string $knee2FkButton;
								string $LowerLegIkButton;
								int $knee2Offset = 0;
								if ($kneeNum == 1)
								{
									$knee1FkButton = `button -label "KneeFk"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_KneeFk_Ctrl")`;
									button -edit -command ("modSelectControl " + $knee1FkButton) $knee1FkButton;
								}

								else
								{
									$knee1FkButton = `button -label "Knee1Fk"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Knee1Fk_Ctrl")`;
									$knee2FkButton = `button -label "Knee2Fk"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Knee2Fk_Ctrl")`;
									$LowerLegIkButton = `button -label "LwrLegIk"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_LowerLegIk_Ctrl")`;
									button -edit -command ("modSelectControl " + $knee1FkButton) $knee1FkButton;
									button -edit -command ("modSelectControl " + $knee2FkButton) $knee2FkButton;
									button -edit -command ("modSelectControl " + $LowerLegIkButton) $LowerLegIkButton;
									$knee2Offset = 18;
								}


								//SWITCH
								string $legSwitch = `button -label "Switch_Ctrl" -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "_Switch_Ctrl")`;
								string $legIkToFk = `button -label "IkToFk"  -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName)`;
								string $legFkToIk = `button -label "FkToIk"  -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName)`;
								string $legALL    = `button -label ">ALL<"   -w 054 -h 18 -bgc .95 .95 .95 -ann ($modRigName + $coreName)`;
								button -edit -command ("modSelectControl " + $legSwitch) $legSwitch;
								button -edit -command ("modIkToFk " + $legIkToFk) $legIkToFk;
								button -edit -command ("modFkToIk " + $legFkToIk) $legFkToIk;
								button -edit -command ("modSelectAllModulesControl " + $legALL) $legALL;
								
								formLayout -edit
								//Fk
								-attachForm $hipButton "left" 2
								-attachForm $hipButton "top" 0
								
								-attachForm $knee1FkButton "left" 2
								-attachForm $knee1FkButton "top" 18

								-attachForm $ankleFkButton "left" 2
								-attachForm $ankleFkButton "top" ($knee2Offset + 36)

								-attachForm $ballFkButton "left" 2
								-attachForm $ballFkButton "top" ($knee2Offset + 54)
								
								
								//Ik
								-attachForm $knee1IkButton "left" 62
								-attachForm $knee1IkButton "top" 0

								-attachForm $heelIkButton "left" 62
								-attachForm $heelIkButton "top" ($knee2Offset + 18)
								
								-attachForm $ballIkButton "left" 62
								-attachForm $ballIkButton "top" ($knee2Offset + 36)

								-attachForm $toeIkButton "left" 62
								-attachForm $toeIkButton "top" ($knee2Offset + 54)
								
								-attachForm $footIkButton "left" 62
								-attachForm $footIkButton "top" ($knee2Offset + 72)
								
								//SWITCH
								-attachForm $legSwitch "left" 128
								-attachForm $legSwitch "top" 0

								-attachForm $legIkToFk "left" 128
								-attachForm $legIkToFk "top" 18

								-attachForm $legFkToIk "left" 128
								-attachForm $legFkToIk "top" 36
								
								-attachForm $legALL "left" 128
								-attachForm $legALL "top" 54
									
								$legsFormLayout;

								if ($kneeNum == 2)
								{
									formLayout -edit
									-attachForm $knee2FkButton "left" 2
									-attachForm $knee2FkButton "top" 36
									
									-attachForm $LowerLegIkButton "left" 62
									-attachForm $LowerLegIkButton "top" 18
									
									$legsFormLayout;
								}								
									
								setParent ($modRigName + "LegModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;
								
								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent ($modRigName + "LegsColumnLayout");
								}
							}
							//setParent ($modRigName + "LegsColumnLayout");
							//$i = ($i + 1);
						}

			setParent ($modRigName + "MainModSelectionPaneLayout");
				paneLayout -configuration "horizontal3" ($modRigName + "SubModSelectionPaneLayout2");
						
				
					//LOOK ATS///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "LOOK-ATS";
						scrollLayout ($modRigName + "LookAtsScrollLayout");
						columnLayout ($modRigName + "LookAtsColumnLayout");
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "lookAt")
							{
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								int $lookAts = `getAttr ($each + ".lookAts")`;
								string $side = "";
								
								int $frameWidth =  (($lookAts + 2) * 32 - 4);
								if ($frameWidth < 184)
								{
									$frameWidth = 184;
								}

								string $lookAtButton;
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}
								}
								//CREATE PAIRING FRAME LAYOUT
								if (`objExists ($each + ".side")` && ($side == "right"))
								{
									frameLayout -label ($moduleName + " (pair)")
									-w 200
									-bgc 0.17 0.17 0.17
									-collapsable 1 ($moduleName + "PairFrameLayout");
									columnLayout ($moduleName + "PairColumnLayout");
									//ADD TOP LOOK-AT BUTTON
									string $lookAtButton = `button -label ($moduleName + " Look-At") -h 18 -ann ($modRigName + "" + $moduleName + "LookAt_Ctrl")`;
									button -edit -command ("modSelectControl " + $lookAtButton) $lookAtButton;
								}
								
								frameLayout -label $coreName
								-w $frameWidth
								-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z)
								-collapsable 1 ($modRigName + "LookAtModFrameLayout" + $i);
								columnLayout;
								int $currentSplineNum = 1;
								
								if (!`objExists ($each + ".side")`)
								{
									string $lookAtButton = `button -label ($moduleName + " Look-At") -h 18 -ann ($modRigName + "" + $moduleName + "LookAt_Ctrl")`;
									button -edit -command ("modSelectControl " + $lookAtButton) $lookAtButton;
								}

								//LOOK-AT CONTROLS
								string $selectForm = `formLayout -numberOfDivisions 100`;
								$jointNum = 1;
								$hOffset = 0;
								$vOffset = 0;
						
								//ADD "ALL" BUTTONS IF THERE ARE MULTIPLE CHAINS
								if ($lookAts > 1)
								{
									$allButton = `button -label ">ALL<" -w 42 -h 18 -bgc .95 .95 .95 -ann ($modRigName + $coreName)`;
									button -edit -command ("modSelectAllModulesControl " + $allButton) $allButton;
									
									formLayout -edit
									-attachForm $allButton "left" 0
									-attachForm $allButton "top" 0
									$selectForm;
									$hOffset = ($hOffset + 44);
								}
								
								string $stringNum = "0";
								$mainButton = `button -label "Mstr" -w 34 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "_Master_Ctrl")`;
								button -edit -command ("modSelectControl " + $mainButton) $mainButton;
								formLayout -edit
								-attachForm $mainButton "left" $hOffset
								-attachForm $mainButton "top" $vOffset											
								$selectForm;
								
								$hOffset = ($hOffset + 36);

								$jointNum = 1;
								while ($jointNum <= $lookAts)
								{
									if ($jointNum >= 10)
									{
										$stringNum = "";
									}
									$chain_numButton = `button -label ($jointNum) -w 28 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_" + $stringNum + $jointNum + "_Ctrl")`;
									button -edit -command ("modSelectControl " + $chain_numButton) $chain_numButton;
									
									formLayout -edit
									-attachForm $chain_numButton "left" $hOffset
									-attachForm $chain_numButton "top" $vOffset											
									$selectForm;
									
									$hOffset = ($hOffset + 28);
									$jointNum++;
								}
								$vOffset = ($vOffset + 30);
								$jointNum = 1;
								$hOffset = 0;

								setParent ($modRigName + "LookAtModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;

								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent ($modRigName + "LookAtsColumnLayout");
								}
							}
							//setParent ($modRigName + "LookAtsColumnLayout");
							//$i = ($i + 1);
						}
						

						setParent ($modRigName + "SubModSelectionPaneLayout2");

					//HEAD///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "HEADS";
						scrollLayout ($modRigName + "HeadScrollLayout");
						columnLayout ($modRigName + "HeadColumnLayout");
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "head")
							{
								//GET CORE NAME
								$coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC2 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										//CREATE PAIRING FRAME LAYOUT
										frameLayout -label ($moduleName + " (pair)")
										-bgc 0.17 0.17 0.17
										-w 184
										-collapsable 1 ($moduleName + "PairFrameLayout");
										columnLayout ($moduleName + "PairColumnLayout");
										//
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}
										
								}
								frameLayout -label $coreName
									-w 184
									-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z)
									-collapsable 1 ($modRigName + "HeadModFrameLayout" + $i);
									columnLayout;
									if (!objExists ($each + ".jaw"))
									{
										string $headButton = `button -label "Head" -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Master_Ctrl")`;
										button -edit -command ("modSelectControl " + $headButton) $headButton;
									}
									else
									{
										rowColumnLayout -numberOfColumns 2;
										string $headButton = `button -label "Head" -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Master_Ctrl")`;
										button -edit -command ("modSelectControl " + $headButton) $headButton;
										string $jawButton = `button -label "Jaw" -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Jaw_Ctrl")`;
										button -edit -command ("modSelectControl " + $jawButton) $jawButton;
									}
								setParent ($modRigName + "HeadModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;
								
								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent ($modRigName + "HeadColumnLayout");
								}
							}
							//setParent ($modRigName + "HeadColumnLayout");
							//$i = ($i + 1);
						}
				setParent ($modRigName + "SubModSelectionPaneLayout2");

					
					//SPLINE///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "RIBBON SPLINES";
						scrollLayout ($modRigName + "SplineScrollLayout");
						columnLayout ($modRigName + "SplineColumnLayout");
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "spline")
							{
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										//CREATE PAIRING FRAME LAYOUT
										frameLayout -label ($moduleName + " (pair)")
										-bgc 0.17 0.17 0.17
										-w 184
										-collapsable 1 ($moduleName + "PairFrameLayout");
										columnLayout ($moduleName + "PairColumnLayout");
										//
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}

								}
							
								frameLayout -label $coreName
								-w 184
								-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z)
								-collapsable 1 ($modRigName + "SplineModFrameLayout" + $i);
								columnLayout;
								int $currentSplineNum = 1;


								//SPLINE CONTROLS
								int $splineNum = `getAttr ($each + ".splineJoints")`;
								$splineNum = ($splineNum - 1);
								int $currentSplineNum = 1;
								string $spineSelectFormLayout = `formLayout -numberOfDivisions 100`;
								$hOffset = 1;
								$vOffset = 0;
						
								string $stringNum = "0";
								while ($splineNum > 0)
								{
									if ($splineNum >= 10)
									{
										$stringNum = "";
									}
									$splineFk     = `button -label ($splineNum + " Fk")  -w 36 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_" + $stringNum + $splineNum + "Fk_Ctrl")`;
									$splineCurve_Ctrl = `button -label ($splineNum + " Crv") -w 38 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_" + $stringNum + $splineNum + "Curve_Ctrl")`;
									button -edit -command ("modSelectControl " + $splineFk) $splineFk;
									button -edit -command ("modSelectControl " + $splineCurve_Ctrl) $splineCurve_Ctrl;
									
									formLayout -edit
									-attachForm $splineFk "left" $hOffset
									-attachForm $splineFk "top" $vOffset
									
									-attachForm $splineCurve_Ctrl "left" ($hOffset + 40)
									-attachForm $splineCurve_Ctrl "top" $vOffset											
									$spineSelectFormLayout;
									
									$vOffset = ($vOffset + 18);
									$splineNum--;
								}
								
								//SWITCH
								string $topIkCButton = `button -label "TopIk_Ctrl" -w 86 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "_TopIk_Ctrl")`;
								string $midIkCButton = `button -label "MidIk_Ctrl" -w 86 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "_MidIk_Ctrl")`;
								string $allFkButton = `button -label "All Fk"  -w 40 -h 18 -bgc .95 .95 .95  -ann ($modRigName + $coreName + "_*Fk_Ctrl")`;
								string $allCurveButton    = `button -label "All Crv" -w 42 -h 18 -bgc .95 .95 .95  -ann ($modRigName + $coreName)`;
								button -edit -command ("modSelectControl " + $topIkCButton) $topIkCButton;
								button -edit -command ("modSelectControl " + $midIkCButton) $midIkCButton;
								button -edit -command ("modSelectControl " + $allFkButton) $allFkButton;
								button -edit -command ("modSelectAllModulesControl " + $allCurveButton) $allCurveButton;
								
								formLayout -edit
								-attachForm $topIkCButton "left" 92
								-attachForm $topIkCButton "top" 0

								-attachForm $midIkCButton "left" 92
								-attachForm $midIkCButton "top" 18

								-attachForm $allFkButton "left" 92
								-attachForm $allFkButton "top" 36
								
								-attachForm $allCurveButton "left" 136
								-attachForm $allCurveButton "top" 36
									
								$spineSelectFormLayout;								
								setParent ($modRigName + "SplineModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;
								
								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent ($modRigName + "SplineColumnLayout");
								}
							}
							//setParent ($modRigName + "SplineColumnLayout");
							//$i++;
						}
						
				setParent ($modRigName + "SubModSelectionPaneLayout2");

						
			setParent ($modRigName + "MainModSelectionPaneLayout");
				paneLayout -configuration "horizontal2" ($modRigName + "SubModSelectionPaneLayout3");
					
						
					//Fk CHAINS///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "Fk CHAINS";
						scrollLayout ($modRigName + "FkChainScrollLayout");
						columnLayout ($modRigName + "FkChainColumnLayout");
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "fkChain")
							{
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								int $fkChains = `getAttr ($each + ".fkChains")`;
								int $jointsPerChain = `getAttr ($each + ".jointsPerChain")`;
								int $ikEnabled = 0;
								if (`objExists ($each + ".ikEnabled")`)
								{
									$ikEnabled = `getAttr ($each + ".ikEnabled")`;
								}
								
								$frameWidth =  (($jointsPerChain + 1) * 32 - 4);
								if ($frameWidth < 184)
								{
									$frameWidth = 184;
								}
								
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}

								}
								//CREATE PAIRING FRAME LAYOUT
								if (`objExists ($each + ".side")` && ($side == "right"))
								{
									frameLayout -label ($moduleName + " (pair)")
									-w $frameWidth
									-bgc 0.17 0.17 0.17
									-collapsable 1 ($moduleName + "PairFrameLayout");
									columnLayout ($moduleName + "PairColumnLayout");
								}
								
								frameLayout -label $coreName
								-w $frameWidth
								-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z)
								-collapsable 1 ($modRigName + "FkChainModFrameLayout" + $i);
								columnLayout;
								int $currentSplineNum = 1;
								
								//Fk CHAIN CONTROLS
								string $selectForm = `formLayout -numberOfDivisions 100`;
								$jointNum = 1;
								$chainNum = 1;
								$hOffset = 0;
								$vOffset = 0;
								$vDropDownOffset = 0;
								string $jointString = "0";
								string $chainString = "0";
								$optionMenuVis = 1;
								
								//CREATE DROPDOWN
								if ($jointsPerChain == 1 || $ikEnabled == 0)
								{
									//HIDE DROP DOWN IF THERE IS ONLY ONE Fk CONTROL
									$optionMenuVis = 0;
									$vDropDownOffset = -22;
								}
								optionMenu -w 100 -vis $optionMenuVis ("FkIkChainSelectMenu" + $i);
									menuItem -label "Select Fk";
									menuItem -label "Select Ik";
									menuItem -label "Select Fk & Ik";
									$vDropDownOffset = $vDropDownOffset + 22;

								if ($jointsPerChain > 1 && $fkChains > 1)
								{
									//MASTER BUTTON
									$fkMasterButton = `button -label ">ALL<" -w 32 -h 18 -bgc .95 .95 .95 -ann ($modRigName + $coreName + "_??_??")`;
									//button -edit -command ("modSelectControlFk " + $fkMasterButton + "," + $i) $fkMasterButton;
									button -edit -command ("modSelectControlFk(\"" + $fkMasterButton + "\",\"" + $i + "\")") $fkMasterButton;
									
									formLayout -edit
									-attachForm $fkMasterButton "left" 0
									-attachForm $fkMasterButton "top" $vDropDownOffset
									$selectForm;
									$hOffset = 34;
									$vOffset = $vDropDownOffset + 18;
								}
								$vOffset3 = 0;
								if ($fkChains == 1)
								{	
									$vOffset3 = $vDropDownOffset;
								}
								$hOffset2 = $hOffset;
								$vOffset2 = $vOffset;
								if ($jointsPerChain > 1)
								{
									while ($chainNum <= $fkChains)
									{
										//Fk DOWN BUTTON
										$chain_FkDownButton = `button -label ">" -w 32 -h 18 -bgc .95 .95 .95
										-ann ($modRigName + $coreName + "_" + $chainString + $chainNum + "_??")`;
										//button -edit -command ("modSelectControlFk " + $chain_FkDownButton + "," + $i) $chain_FkDownButton;
										button -edit -command ("modSelectControlFk(\"" + $chain_FkDownButton + "\",\"" + $i + "\")") $chain_FkDownButton;
										
										formLayout -edit
										-attachForm $chain_FkDownButton "left" 0
										-attachForm $chain_FkDownButton "top" ($vOffset2 + $vOffset3)
										$selectForm;
										$vOffset2 = $vOffset2 + 20;
										$chainNum++;
									}
									$hOffset = 34;
								}
								$jointNum = 1;
								$chainNum = 1;
								
								if ($fkChains > 1)
								{
									while ($jointNum <= $jointsPerChain)
									{
										//Fk ACROSS BUTTON
										$chain_FkAcrossButton = `button -label "v" -w 32 -h 18 -bgc .95 .95 .95
										-ann ($modRigName + $coreName + "_??_" + $jointString + $jointNum + "")`;
										//button -edit -command ("modSelectControlFk " + $chain_FkAcrossButton + "," + $i) $chain_FkAcrossButton;
										button -edit -command ("modSelectControlFk(\"" + $chain_FkAcrossButton + "\",\"" + $i + "\")") $chain_FkAcrossButton;
										
										formLayout -edit
										-attachForm $chain_FkAcrossButton "left" $hOffset2
										-attachForm $chain_FkAcrossButton "top" $vDropDownOffset
										$selectForm;
										$hOffset2 = $hOffset2 + 32;
										$jointNum++;
									}
								$vOffset = 18;
								}
								//RESET "v" ">" OFFSETS
								$jointNum = 1;
								$chainNum = 1;
									
								$vOffsetReset = $vOffset + 22;
								if ($jointsPerChain == 1)
								{
									$vOffsetReset = $vOffset;
								}
								while ($jointNum <= $jointsPerChain)
								{//JOINTS
									if ($jointNum >=10)
									{
										$jointString = "";
									}
									$vOffset = $vOffsetReset;
									if ($ikEnabled == 0)
									{
										$vOffset = $vOffset - 22;
									}
									$chainNum = 1;
									while ($chainNum <= $fkChains)
									{//CHAINS
										if ($chainNum >=10)
										{
											$chainString = "";
										}
										$chain_numButton = `button -label ($chainNum + "_" + $jointNum) -w 32 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z)
										-ann ($modRigName + $coreName + "_" + $chainString + $chainNum + "_" + $jointString + $jointNum + "")`;
										//button -edit -command ("modSelectControlFk " + $chain_numButton + "," + $i) $chain_numButton;
										button -edit -command ("modSelectControlFk(\"" + $chain_numButton + "\",\"" + $i + "\")") $chain_numButton;
										//button -edit -command "RRP_selectIkFk(\"rWristFkC\",\"rWristIkC\",\"rArmSwitchC\") $chain_numButton;
										
										formLayout -edit
										-attachForm $chain_numButton "left" $hOffset
										-attachForm $chain_numButton "top" $vOffset											
										$selectForm;
										$vOffset = ($vOffset + 20);
										$chainNum++;
									}//CHAINS END
									$hOffset = ($hOffset + 32);
									$jointNum++;
								}//JOINTS END
							
								$jointNum = 1;								
								setParent ($modRigName + "FkChainModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;
								
								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent ($modRigName + "FkChainColumnLayout");
								}
							}
						}
						
						setParent ($modRigName + "SubModSelectionPaneLayout3");
						
					//AUXILIARIES///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "AUXILIARIES";
						scrollLayout ($modRigName + "AuxiliariesScrollLayout");
						columnLayout ($modRigName + "AuxiliariesColumnLayout");
						string $selectForm = `formLayout -numberOfDivisions 100`;
						int $vOffset;
						int $hOffset;
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "auxiliary")
							{
								//print ("each is " + $each + "\n");
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								
								
								$frameWidth = 184;

								string $auxiliaryButton;
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									//print ("side is " + $side + "\n");
									if ($side == "right")
									{
										//print "sfdsf";
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										//print "zxcxcx";
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}
								}

								//AUXILIARY CONTROLS
								string $selectForm = `formLayout -numberOfDivisions 100`;

								//CREATE PAIRING FRAME LAYOUT
								if (`objExists ($each + ".side")` && ($side == "right"))
								{
									$auxButton = `button -label ($coreName + "Aux_Ctrl") -w 150 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Aux_Ctrl") ($coreName + "Aux_Ctrl")`;
									button -edit -command ("modSelectControl " + $auxButton) $auxButton;
									formLayout -edit
									-attachForm $auxButton "left" 0
									-attachForm $auxButton "top" 0
									$selectForm;
								}
								else if (`objExists ($each + ".side")` && ($side == "left"))
								{
									$auxButton = `button -label ($coreName + "Aux_Ctrl") -w 150 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Aux_Ctrl") ($coreName + "Aux_Ctrl")` ;
									button -edit -command ("modSelectControl " + $auxButton) $auxButton;
									formLayout -edit
									-attachForm $auxButton "left" 0
									-attachForm $auxButton "top" 0
									$selectForm;
								}
								else
								{
									$auxButton = `button -label ($coreName + "Aux_Ctrl") -w 150 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Aux_Ctrl") ($coreName + "Aux_Ctrl")`;
									button -edit -command ("modSelectControl " + $auxButton) $auxButton;
									formLayout -edit
									-attachForm $auxButton "left" 0
									-attachForm $auxButton "top" 0
									$selectForm;
								}
								

								
	
								setParent ($modRigName + "AuxiliariesColumnLayout");

								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent ($modRigName + "AuxiliariesColumnLayout");
								}
							}
							//setParent ($modRigName + "AuxiliariesColumnLayout");
							//$i = ($i + 1);
						}

			//setParent ($modRigName + "MainModSelectionPaneLayout");
			setParent modPoserTabs;
					
			
			tabLayout -edit -tabLabel $modForm ("\"" + $rigGrp + "\"") modPoserTabs;
		}
		else
		{
			warning "\nThe selected object is not the \"MAIN_Ctrl\" of a rig";
		}
	}
}


//MAIN PROCEDURE FOR WINDOW
global proc RapidRig_Modular_V2_Selector()                                        
{
	if (`window -exists RRM_Selector`) 
	{
		deleteUI RRM_Selector; 
	}
	//GET NUMBER OF MODULES
	string $main_Ctrls[] = `ls "*MAIN_Ctrl" "*:*MAIN_Ctrl" `;
	if (`size $main_Ctrls` > 0)
	{
		window -title "Rapid Rig: Modular Selector 2.0.1"
		//-wh 375 212
		-rtf on
		-mnb true
		-mxb true
		-s 1
		RRM_Selector;
	
		CreateModuPoserGUI($main_Ctrls);
		
		showWindow RRM_Selector;
		window -e -w 660 -h 800 RRM_Selector;
	}

	else
	{
		warning "Your scene has no RRM Rigs in it";
	}
}

RapidRig_Modular_V2_Selector;